/**
 * Swagger UI - Cloud Hospital
 * Cloud Hospital application with Swagger, Swashbuckle, and API versioning.
 *
 * The version of the OpenAPI document: 1
 * Contact: hyounoosung@icloudhospital.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 *
 * @export
 * @interface Account
 */
export interface Account {
    /**
     *
     * @type {string}
     * @memberof Account
     */
    id?: string;
    /**
     *
     * @type {VendorType}
     * @memberof Account
     */
    vendor?: VendorType;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Account
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface Accreditation
 */
export interface Accreditation {
    /**
     *
     * @type {string}
     * @memberof Accreditation
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Accreditation
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Accreditation
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Accreditation
     */
    logo?: string;
    /**
     *
     * @type {string}
     * @memberof Accreditation
     */
    country?: string;
    /**
     *
     * @type {Array<HospitalAccreditation>}
     * @memberof Accreditation
     */
    accreditations?: Array<HospitalAccreditation>;
}
/**
 *
 * @export
 * @interface Article
 */
export interface Article {
    /**
     *
     * @type {string}
     * @memberof Article
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Article
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof Article
     */
    normalizedTitle?: string;
    /**
     *
     * @type {string}
     * @memberof Article
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof Article
     */
    body?: string;
    /**
     *
     * @type {ArticleStatus}
     * @memberof Article
     */
    status?: ArticleStatus;
    /**
     *
     * @type {string}
     * @memberof Article
     */
    userId?: string;
    /**
     *
     * @type {User}
     * @memberof Article
     */
    user?: User;
    /**
     *
     * @type {string}
     * @memberof Article
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof Article
     */
    hospital?: Hospital;
    /**
     *
     * @type {Array<Tag>}
     * @memberof Article
     */
    tags?: Array<Tag>;
    /**
     *
     * @type {Array<Media>}
     * @memberof Article
     */
    medias?: Array<Media>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Article
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface ArticleItemViewModel
 */
export interface ArticleItemViewModel {
    /**
     *
     * @type {string}
     * @memberof ArticleItemViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleItemViewModel
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleItemViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleItemViewModel
     */
    body?: string;
    /**
     *
     * @type {ArticleStatus}
     * @memberof ArticleItemViewModel
     */
    status?: ArticleStatus;
    /**
     *
     * @type {string}
     * @memberof ArticleItemViewModel
     */
    userId?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleItemViewModel
     */
    authorName?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleItemViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {Array<Tag>}
     * @memberof ArticleItemViewModel
     */
    tags?: Array<Tag>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof ArticleItemViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof ArticleItemViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum ArticleStatus {
    Draft = "Draft",
    Active = "Active",
    Archived = "Archived"
}
/**
 *
 * @export
 * @interface ArticleViewModel
 */
export interface ArticleViewModel {
    /**
     *
     * @type {string}
     * @memberof ArticleViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleViewModel
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleViewModel
     */
    body?: string;
    /**
     *
     * @type {ArticleStatus}
     * @memberof ArticleViewModel
     */
    status?: ArticleStatus;
    /**
     *
     * @type {string}
     * @memberof ArticleViewModel
     */
    userId?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleViewModel
     */
    authorName?: string;
    /**
     *
     * @type {string}
     * @memberof ArticleViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {Array<Tag>}
     * @memberof ArticleViewModel
     */
    tags?: Array<Tag>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof ArticleViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof ArticleViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface ArticlesViewModel
 */
export interface ArticlesViewModel {
    /**
     *
     * @type {Array<ArticleItemViewModel>}
     * @memberof ArticlesViewModel
     */
    items?: Array<ArticleItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof ArticlesViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface Assessment
 */
export interface Assessment {
    /**
     *
     * @type {string}
     * @memberof Assessment
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Assessment
     */
    serviceId?: string;
    /**
     *
     * @type {Service}
     * @memberof Assessment
     */
    service?: Service;
    /**
     *
     * @type {string}
     * @memberof Assessment
     */
    question?: string;
    /**
     *
     * @type {string}
     * @memberof Assessment
     */
    normalizedQuestion?: string;
    /**
     *
     * @type {AssessmentType}
     * @memberof Assessment
     */
    answerType?: AssessmentType;
    /**
     *
     * @type {boolean}
     * @memberof Assessment
     */
    isRequired?: boolean;
    /**
     *
     * @type {number}
     * @memberof Assessment
     */
    order?: number;
    /**
     *
     * @type {Array<AssessmentAnswer>}
     * @memberof Assessment
     */
    assessmentAnswers?: Array<AssessmentAnswer>;
}
/**
 *
 * @export
 * @interface AssessmentAnswer
 */
export interface AssessmentAnswer {
    /**
     *
     * @type {string}
     * @memberof AssessmentAnswer
     */
    assessmentId?: string;
    /**
     *
     * @type {Assessment}
     * @memberof AssessmentAnswer
     */
    assessment?: Assessment;
    /**
     *
     * @type {string}
     * @memberof AssessmentAnswer
     */
    bookingId?: string;
    /**
     *
     * @type {Booking}
     * @memberof AssessmentAnswer
     */
    booking?: Booking;
    /**
     *
     * @type {string}
     * @memberof AssessmentAnswer
     */
    textAnswer?: string;
    /**
     *
     * @type {boolean}
     * @memberof AssessmentAnswer
     */
    booleanAnswer?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum AssessmentType {
    Boolean = "Boolean",
    Text = "Text"
}
/**
 *
 * @export
 * @interface AuditableEntity
 */
export interface AuditableEntity {
    /**
     *
     * @type {string}
     * @memberof AuditableEntity
     */
    createdBy?: string;
    /**
     *
     * @type {string}
     * @memberof AuditableEntity
     */
    updatedBy?: string;
    /**
     *
     * @type {string}
     * @memberof AuditableEntity
     */
    deletedBy?: string;
    /**
     *
     * @type {Date}
     * @memberof AuditableEntity
     */
    createdDate?: Date;
    /**
     *
     * @type {Date}
     * @memberof AuditableEntity
     */
    updatedDate?: Date;
    /**
     *
     * @type {Date}
     * @memberof AuditableEntity
     */
    deletedDate?: Date;
    /**
     *
     * @type {boolean}
     * @memberof AuditableEntity
     */
    isHidden?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AuditableEntity
     */
    isDeleted?: boolean;
}
/**
 *
 * @export
 * @interface Award
 */
export interface Award {
    /**
     *
     * @type {string}
     * @memberof Award
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Award
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Award
     */
    image?: string;
    /**
     *
     * @type {Date}
     * @memberof Award
     */
    date?: Date;
}
/**
 *
 * @export
 * @interface AwardViewModel
 */
export interface AwardViewModel {
    /**
     *
     * @type {string}
     * @memberof AwardViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof AwardViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof AwardViewModel
     */
    image?: string;
    /**
     *
     * @type {Date}
     * @memberof AwardViewModel
     */
    date?: Date;
}
/**
 *
 * @export
 * @interface Booking
 */
export interface Booking {
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    patientId?: string;
    /**
     *
     * @type {Patient}
     * @memberof Booking
     */
    patient?: Patient;
    /**
     *
     * @type {string}
     * @memberof Booking
     */
    packageId?: string;
    /**
     *
     * @type {Package}
     * @memberof Booking
     */
    _package?: Package;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    fee?: number;
    /**
     *
     * @type {number}
     * @memberof Booking
     */
    applicationFee?: number;
    /**
     *
     * @type {Date}
     * @memberof Booking
     */
    approximateDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof Booking
     */
    approximateDateEnd?: Date;
    /**
     *
     * @type {Date}
     * @memberof Booking
     */
    confirmedDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof Booking
     */
    confirmedDateEnd?: Date;
    /**
     *
     * @type {BookingStatus}
     * @memberof Booking
     */
    bookingStatus?: BookingStatus;
    /**
     *
     * @type {RejectReason}
     * @memberof Booking
     */
    rejectReason?: RejectReason;
    /**
     *
     * @type {boolean}
     * @memberof Booking
     */
    isOpen?: boolean;
    /**
     *
     * @type {Array<Payment>}
     * @memberof Booking
     */
    payments?: Array<Payment>;
    /**
     *
     * @type {Array<BookingComment>}
     * @memberof Booking
     */
    bookingComments?: Array<BookingComment>;
    /**
     *
     * @type {Array<AssessmentAnswer>}
     * @memberof Booking
     */
    assessmentAnswers?: Array<AssessmentAnswer>;
    /**
     *
     * @type {Array<ChangeLog>}
     * @memberof Booking
     */
    bookingStatusChangeLogs?: Array<ChangeLog>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Booking
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface BookingComment
 */
export interface BookingComment {
    /**
     *
     * @type {string}
     * @memberof BookingComment
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BookingComment
     */
    patientId?: string;
    /**
     *
     * @type {Patient}
     * @memberof BookingComment
     */
    patient?: Patient;
    /**
     *
     * @type {string}
     * @memberof BookingComment
     */
    bookingId?: string;
    /**
     *
     * @type {Booking}
     * @memberof BookingComment
     */
    booking?: Booking;
    /**
     *
     * @type {string}
     * @memberof BookingComment
     */
    body?: string;
    /**
     *
     * @type {Array<Media>}
     * @memberof BookingComment
     */
    medias?: Array<Media>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof BookingComment
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface BookingItemViewModel
 */
export interface BookingItemViewModel {
    /**
     *
     * @type {string}
     * @memberof BookingItemViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BookingItemViewModel
     */
    patientId?: string;
    /**
     *
     * @type {string}
     * @memberof BookingItemViewModel
     */
    packageId?: string;
    /**
     *
     * @type {string}
     * @memberof BookingItemViewModel
     */
    managerId?: string;
    /**
     *
     * @type {number}
     * @memberof BookingItemViewModel
     */
    fee?: number;
    /**
     *
     * @type {number}
     * @memberof BookingItemViewModel
     */
    applicationFee?: number;
    /**
     *
     * @type {Date}
     * @memberof BookingItemViewModel
     */
    approximateDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof BookingItemViewModel
     */
    approximateDateEnd?: Date;
    /**
     *
     * @type {Date}
     * @memberof BookingItemViewModel
     */
    confirmedDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof BookingItemViewModel
     */
    confirmedDateEnd?: Date;
    /**
     *
     * @type {BookingStatus}
     * @memberof BookingItemViewModel
     */
    bookingStatus?: BookingStatus;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum BookingStatus {
    New = "New",
    Rejected = "Rejected",
    Approved = "Approved",
    Paid = "Paid",
    Canceled = "Canceled"
}
/**
 *
 * @export
 * @interface BookingViewModel
 */
export interface BookingViewModel {
    /**
     *
     * @type {string}
     * @memberof BookingViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof BookingViewModel
     */
    patientId?: string;
    /**
     *
     * @type {string}
     * @memberof BookingViewModel
     */
    packageId?: string;
    /**
     *
     * @type {string}
     * @memberof BookingViewModel
     */
    managerId?: string;
    /**
     *
     * @type {number}
     * @memberof BookingViewModel
     */
    fee?: number;
    /**
     *
     * @type {number}
     * @memberof BookingViewModel
     */
    applicationFee?: number;
    /**
     *
     * @type {Date}
     * @memberof BookingViewModel
     */
    approximateDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof BookingViewModel
     */
    approximateDateEnd?: Date;
    /**
     *
     * @type {Date}
     * @memberof BookingViewModel
     */
    confirmedDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof BookingViewModel
     */
    confirmedDateEnd?: Date;
    /**
     *
     * @type {BookingStatus}
     * @memberof BookingViewModel
     */
    bookingStatus?: BookingStatus;
}
/**
 *
 * @export
 * @interface BookingsViewModel
 */
export interface BookingsViewModel {
    /**
     *
     * @type {Array<BookingItemViewModel>}
     * @memberof BookingsViewModel
     */
    items?: Array<BookingItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof BookingsViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface CHAdminViewModel
 */
export interface CHAdminViewModel {
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    userType?: string;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CHAdminViewModel
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CHAdminViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CHAdminViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CHAdminViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CHAdminViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CHAdminsViewModel
 */
export interface CHAdminsViewModel {
    /**
     *
     * @type {Array<UserItemViewModel>}
     * @memberof CHAdminsViewModel
     */
    items?: Array<UserItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof CHAdminsViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface CHManagerViewModel
 */
export interface CHManagerViewModel {
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    userType?: string;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CHManagerViewModel
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CHManagerViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CHManagerViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CHManagerViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CHManagerViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CHManagersViewModel
 */
export interface CHManagersViewModel {
    /**
     *
     * @type {Array<UserItemViewModel>}
     * @memberof CHManagersViewModel
     */
    items?: Array<UserItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof CHManagersViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface ChangeEmailCommand
 */
export interface ChangeEmailCommand {
    /**
     *
     * @type {string}
     * @memberof ChangeEmailCommand
     */
    email?: string;
}
/**
 *
 * @export
 * @interface ChangeLog
 */
export interface ChangeLog {
    /**
     *
     * @type {string}
     * @memberof ChangeLog
     */
    id?: string;
    /**
     *
     * @type {number}
     * @memberof ChangeLog
     */
    status?: number;
    /**
     *
     * @type {string}
     * @memberof ChangeLog
     */
    actorId?: string;
    /**
     *
     * @type {Date}
     * @memberof ChangeLog
     */
    createdDate?: Date;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum ChargeStatus {
    Pending = "Pending",
    Succeeded = "Succeeded",
    Failed = "Failed"
}
/**
 *
 * @export
 * @interface Coordinate
 */
export interface Coordinate {
    /**
     *
     * @type {number}
     * @memberof Coordinate
     */
    x?: number;
    /**
     *
     * @type {number}
     * @memberof Coordinate
     */
    y?: number;
    /**
     *
     * @type {number}
     * @memberof Coordinate
     */
    z?: number;
    /**
     *
     * @type {number}
     * @memberof Coordinate
     */
    m?: number;
    /**
     *
     * @type {Coordinate}
     * @memberof Coordinate
     */
    coordinateValue?: Coordinate;
}
/**
 *
 * @export
 * @interface CoordinateSequence
 */
export interface CoordinateSequence {
    /**
     *
     * @type {number}
     * @memberof CoordinateSequence
     */
    dimension?: number;
    /**
     *
     * @type {number}
     * @memberof CoordinateSequence
     */
    measures?: number;
    /**
     *
     * @type {number}
     * @memberof CoordinateSequence
     */
    spatial?: number;
    /**
     *
     * @type {Ordinates}
     * @memberof CoordinateSequence
     */
    ordinates?: Ordinates;
    /**
     *
     * @type {boolean}
     * @memberof CoordinateSequence
     */
    hasZ?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CoordinateSequence
     */
    hasM?: boolean;
    /**
     *
     * @type {number}
     * @memberof CoordinateSequence
     */
    zOrdinateIndex?: number;
    /**
     *
     * @type {number}
     * @memberof CoordinateSequence
     */
    mOrdinateIndex?: number;
    /**
     *
     * @type {number}
     * @memberof CoordinateSequence
     */
    count?: number;
}
/**
 *
 * @export
 * @interface CoordinateSequenceFactory
 */
export interface CoordinateSequenceFactory {
    /**
     *
     * @type {Ordinates}
     * @memberof CoordinateSequenceFactory
     */
    ordinates?: Ordinates;
}
/**
 *
 * @export
 * @interface CountriesViewModel
 */
export interface CountriesViewModel {
    /**
     *
     * @type {Array<CountryItemViewModel>}
     * @memberof CountriesViewModel
     */
    items?: Array<CountryItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof CountriesViewModel
     */
    metaData?: PagedListMetaData;
    /**
     *
     * @type {number}
     * @memberof CountriesViewModel
     */
    totalHospitalsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CountriesViewModel
     */
    totalDoctorsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CountriesViewModel
     */
    totalSpecialitiesCount?: number;
}
/**
 *
 * @export
 * @interface Country
 */
export interface Country {
    /**
     *
     * @type {string}
     * @memberof Country
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Country
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Country
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Country
     */
    description?: string;
    /**
     *
     * @type {Array<Hospital>}
     * @memberof Country
     */
    hospitals?: Array<Hospital>;
    /**
     *
     * @type {Array<Media>}
     * @memberof Country
     */
    medias?: Array<Media>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Country
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CountryItemViewModel
 */
export interface CountryItemViewModel {
    /**
     *
     * @type {string}
     * @memberof CountryItemViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof CountryItemViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CountryItemViewModel
     */
    description?: string;
    /**
     *
     * @type {number}
     * @memberof CountryItemViewModel
     */
    hospitalsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CountryItemViewModel
     */
    doctorsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CountryItemViewModel
     */
    specialitiesCount?: number;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof CountryItemViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CountryItemViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CountryViewModel
 */
export interface CountryViewModel {
    /**
     *
     * @type {string}
     * @memberof CountryViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof CountryViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CountryViewModel
     */
    description?: string;
    /**
     *
     * @type {number}
     * @memberof CountryViewModel
     */
    hospitalsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CountryViewModel
     */
    doctorsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CountryViewModel
     */
    specialitiesCount?: number;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof CountryViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CountryViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreateArticleCommand
 */
export interface CreateArticleCommand {
    /**
     *
     * @type {string}
     * @memberof CreateArticleCommand
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof CreateArticleCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof CreateArticleCommand
     */
    body?: string;
    /**
     *
     * @type {ArticleStatus}
     * @memberof CreateArticleCommand
     */
    status?: ArticleStatus;
    /**
     *
     * @type {string}
     * @memberof CreateArticleCommand
     */
    hospitalId?: string;
    /**
     *
     * @type {Array<Tag>}
     * @memberof CreateArticleCommand
     */
    tags?: Array<Tag>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof CreateArticleCommand
     */
    medias?: Array<MediaViewModel>;
}
/**
 *
 * @export
 * @interface CreateBookingCommand
 */
export interface CreateBookingCommand {
    /**
     *
     * @type {string}
     * @memberof CreateBookingCommand
     */
    packageId?: string;
    /**
     *
     * @type {Date}
     * @memberof CreateBookingCommand
     */
    approximateDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof CreateBookingCommand
     */
    approximateDateEnd?: Date;
}
/**
 *
 * @export
 * @interface CreateCHAdminCommand
 */
export interface CreateCHAdminCommand {
    /**
     *
     * @type {string}
     * @memberof CreateCHAdminCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHAdminCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHAdminCommand
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHAdminCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHAdminCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CreateCHAdminCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CreateCHAdminCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CreateCHAdminCommand
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CreateCHAdminCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreateCHManagerCommand
 */
export interface CreateCHManagerCommand {
    /**
     *
     * @type {string}
     * @memberof CreateCHManagerCommand
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHManagerCommand
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHManagerCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHManagerCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHManagerCommand
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHManagerCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCHManagerCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CreateCHManagerCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CreateCHManagerCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CreateCHManagerCommand
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CreateCHManagerCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreateCountryCommand
 */
export interface CreateCountryCommand {
    /**
     *
     * @type {string}
     * @memberof CreateCountryCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CreateCountryCommand
     */
    description?: string;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof CreateCountryCommand
     */
    medias?: Array<MediaViewModel>;
}
/**
 *
 * @export
 * @interface CreateDoctorCommand
 */
export interface CreateDoctorCommand {
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CreateDoctorCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CreateDoctorCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CreateDoctorCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CreateDoctorCommand
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CreateDoctorCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreateEquipmentCommand
 */
export interface CreateEquipmentCommand {
    /**
     *
     * @type {string}
     * @memberof CreateEquipmentCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CreateEquipmentCommand
     */
    description?: string;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof CreateEquipmentCommand
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CreateEquipmentCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreateHospitalCommand
 */
export interface CreateHospitalCommand {
    /**
     *
     * @type {string}
     * @memberof CreateHospitalCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CreateHospitalCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof CreateHospitalCommand
     */
    logo?: string;
    /**
     *
     * @type {string}
     * @memberof CreateHospitalCommand
     */
    overview?: string;
    /**
     *
     * @type {number}
     * @memberof CreateHospitalCommand
     */
    bedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CreateHospitalCommand
     */
    operationRoomsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CreateHospitalCommand
     */
    icuBedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CreateHospitalCommand
     */
    departmentsCount?: number;
    /**
     *
     * @type {number}
     * @memberof CreateHospitalCommand
     */
    medicalStaffCount?: number;
    /**
     *
     * @type {string}
     * @memberof CreateHospitalCommand
     */
    countryId?: string;
    /**
     *
     * @type {Array<AwardViewModel>}
     * @memberof CreateHospitalCommand
     */
    awards?: Array<AwardViewModel>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof CreateHospitalCommand
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {LocationViewModel}
     * @memberof CreateHospitalCommand
     */
    location?: LocationViewModel;
}
/**
 *
 * @export
 * @interface CreateManagerCommand
 */
export interface CreateManagerCommand {
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CreateManagerCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CreateManagerCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CreateManagerCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CreateManagerCommand
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CreateManagerCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreatePartnerCommand
 */
export interface CreatePartnerCommand {
    /**
     *
     * @type {string}
     * @memberof CreatePartnerCommand
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePartnerCommand
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePartnerCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePartnerCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePartnerCommand
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePartnerCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePartnerCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CreatePartnerCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CreatePartnerCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CreatePartnerCommand
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CreatePartnerCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreatePatientCommand
 */
export interface CreatePatientCommand {
    /**
     *
     * @type {string}
     * @memberof CreatePatientCommand
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePatientCommand
     */
    email?: string;
    /**
     *
     * @type {boolean}
     * @memberof CreatePatientCommand
     */
    isAdmin?: boolean;
    /**
     *
     * @type {string}
     * @memberof CreatePatientCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePatientCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePatientCommand
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePatientCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof CreatePatientCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof CreatePatientCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof CreatePatientCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof CreatePatientCommand
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof CreatePatientCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface CreateServiceCommand
 */
export interface CreateServiceCommand {
    /**
     *
     * @type {string}
     * @memberof CreateServiceCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CreateServiceCommand
     */
    description?: string;
    /**
     *
     * @type {number}
     * @memberof CreateServiceCommand
     */
    minPrice?: number;
    /**
     *
     * @type {number}
     * @memberof CreateServiceCommand
     */
    maxPrice?: number;
    /**
     *
     * @type {boolean}
     * @memberof CreateServiceCommand
     */
    priceReuqest?: boolean;
    /**
     *
     * @type {Procedure}
     * @memberof CreateServiceCommand
     */
    procedure?: Procedure;
}
/**
 *
 * @export
 * @interface CreateSpecialtyCommand
 */
export interface CreateSpecialtyCommand {
    /**
     *
     * @type {string}
     * @memberof CreateSpecialtyCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof CreateSpecialtyCommand
     */
    description?: string;
}
/**
 *
 * @export
 * @interface Customer
 */
export interface Customer {
    /**
     *
     * @type {string}
     * @memberof Customer
     */
    id?: string;
    /**
     *
     * @type {VendorType}
     * @memberof Customer
     */
    vendor?: VendorType;
    /**
     *
     * @type {string}
     * @memberof Customer
     */
    patientId?: string;
    /**
     *
     * @type {Patient}
     * @memberof Customer
     */
    patient?: Patient;
    /**
     *
     * @type {Array<Payment>}
     * @memberof Customer
     */
    payments?: Array<Payment>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Customer
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface Department
 */
export interface Department {
    /**
     *
     * @type {string}
     * @memberof Department
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Department
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof Department
     */
    hospital?: Hospital;
    /**
     *
     * @type {string}
     * @memberof Department
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Department
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Department
     */
    additionalInfo?: string;
}
/**
 *
 * @export
 * @interface Device
 */
export interface Device {
    /**
     *
     * @type {string}
     * @memberof Device
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Device
     */
    token?: string;
    /**
     *
     * @type {Platform}
     * @memberof Device
     */
    platform?: Platform;
    /**
     *
     * @type {boolean}
     * @memberof Device
     */
    appAlert?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Device
     */
    eventAlert?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Device
     */
    noticeAlert?: boolean;
    /**
     *
     * @type {Array<DeviceLogin>}
     * @memberof Device
     */
    deviceLogins?: Array<DeviceLogin>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Device
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface DeviceLogin
 */
export interface DeviceLogin {
    /**
     *
     * @type {string}
     * @memberof DeviceLogin
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceLogin
     */
    deviceId?: string;
    /**
     *
     * @type {Device}
     * @memberof DeviceLogin
     */
    device?: Device;
    /**
     *
     * @type {string}
     * @memberof DeviceLogin
     */
    version?: string;
    /**
     *
     * @type {Location}
     * @memberof DeviceLogin
     */
    location?: Location;
    /**
     *
     * @type {AuditableEntity}
     * @memberof DeviceLogin
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum Dimension {
    Point = "Point",
    Curve = "Curve",
    Surface = "Surface",
    Dontcare = "Dontcare",
    True = "True",
    False = "False"
}
/**
 *
 * @export
 * @interface Doctor
 */
export interface Doctor {
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    code?: string;
    /**
     *
     * @type {Date}
     * @memberof Doctor
     */
    startPracticeDate?: Date;
    /**
     *
     * @type {Array<DoctorReview>}
     * @memberof Doctor
     */
    reviews?: Array<DoctorReview>;
    /**
     *
     * @type {Array<DoctorLanguage>}
     * @memberof Doctor
     */
    languages?: Array<DoctorLanguage>;
    /**
     *
     * @type {Array<DoctorEducation>}
     * @memberof Doctor
     */
    educations?: Array<DoctorEducation>;
    /**
     *
     * @type {Array<DoctorPortfolio>}
     * @memberof Doctor
     */
    portfolios?: Array<DoctorPortfolio>;
    /**
     *
     * @type {Array<DoctorSpecialty>}
     * @memberof Doctor
     */
    specialties?: Array<DoctorSpecialty>;
    /**
     *
     * @type {Array<DoctorCertificate>}
     * @memberof Doctor
     */
    certificates?: Array<DoctorCertificate>;
    /**
     *
     * @type {Array<DoctorAffiliation>}
     * @memberof Doctor
     */
    doctorAffiliations?: Array<DoctorAffiliation>;
    /**
     *
     * @type {Array<Award>}
     * @memberof Doctor
     */
    awards?: Array<Award>;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof Doctor
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof Doctor
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof Doctor
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<Device>}
     * @memberof Doctor
     */
    devices?: Array<Device>;
    /**
     *
     * @type {Array<Article>}
     * @memberof Doctor
     */
    articles?: Array<Article>;
    /**
     *
     * @type {Array<Media>}
     * @memberof Doctor
     */
    medias?: Array<Media>;
    /**
     *
     * @type {Array<UserLocation>}
     * @memberof Doctor
     */
    locations?: Array<UserLocation>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Doctor
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface DoctorAffiliation
 */
export interface DoctorAffiliation {
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliation
     */
    doctorId?: string;
    /**
     *
     * @type {Doctor}
     * @memberof DoctorAffiliation
     */
    doctor?: Doctor;
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliation
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof DoctorAffiliation
     */
    hospital?: Hospital;
}
/**
 *
 * @export
 * @interface DoctorAffiliationItemViewModel
 */
export interface DoctorAffiliationItemViewModel {
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationItemViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationItemViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationItemViewModel
     */
    doctorId?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationItemViewModel
     */
    doctorName?: string;
}
/**
 *
 * @export
 * @interface DoctorAffiliationViewModel
 */
export interface DoctorAffiliationViewModel {
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationViewModel
     */
    doctorId?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorAffiliationViewModel
     */
    doctorName?: string;
}
/**
 *
 * @export
 * @interface DoctorCertificate
 */
export interface DoctorCertificate {
    /**
     *
     * @type {string}
     * @memberof DoctorCertificate
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorCertificate
     */
    doctorId?: string;
    /**
     *
     * @type {Doctor}
     * @memberof DoctorCertificate
     */
    doctor?: Doctor;
    /**
     *
     * @type {string}
     * @memberof DoctorCertificate
     */
    certificate?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorCertificate
     */
    normalizedCertificate?: string;
    /**
     *
     * @type {Date}
     * @memberof DoctorCertificate
     */
    activeFrom?: Date;
    /**
     *
     * @type {Date}
     * @memberof DoctorCertificate
     */
    activeTo?: Date;
}
/**
 *
 * @export
 * @interface DoctorEducation
 */
export interface DoctorEducation {
    /**
     *
     * @type {string}
     * @memberof DoctorEducation
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorEducation
     */
    doctorId?: string;
    /**
     *
     * @type {Doctor}
     * @memberof DoctorEducation
     */
    doctor?: Doctor;
    /**
     *
     * @type {string}
     * @memberof DoctorEducation
     */
    institution?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorEducation
     */
    normalizedInstitution?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorEducation
     */
    qualification?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorEducation
     */
    normalizedQualification?: string;
    /**
     *
     * @type {Date}
     * @memberof DoctorEducation
     */
    graduationDate?: Date;
}
/**
 *
 * @export
 * @interface DoctorLanguage
 */
export interface DoctorLanguage {
    /**
     *
     * @type {string}
     * @memberof DoctorLanguage
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorLanguage
     */
    doctorId?: string;
    /**
     *
     * @type {Doctor}
     * @memberof DoctorLanguage
     */
    doctor?: Doctor;
    /**
     *
     * @type {string}
     * @memberof DoctorLanguage
     */
    language?: string;
}
/**
 *
 * @export
 * @interface DoctorPortfolio
 */
export interface DoctorPortfolio {
    /**
     *
     * @type {string}
     * @memberof DoctorPortfolio
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorPortfolio
     */
    doctorId?: string;
    /**
     *
     * @type {Doctor}
     * @memberof DoctorPortfolio
     */
    doctor?: Doctor;
    /**
     *
     * @type {string}
     * @memberof DoctorPortfolio
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorPortfolio
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorPortfolio
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorPortfolio
     */
    photoBefore?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorPortfolio
     */
    photoAfter?: string;
}
/**
 *
 * @export
 * @interface DoctorReview
 */
export interface DoctorReview {
    /**
     *
     * @type {string}
     * @memberof DoctorReview
     */
    patientId?: string;
    /**
     *
     * @type {Patient}
     * @memberof DoctorReview
     */
    patient?: Patient;
    /**
     *
     * @type {string}
     * @memberof DoctorReview
     */
    doctorId?: string;
    /**
     *
     * @type {Doctor}
     * @memberof DoctorReview
     */
    doctor?: Doctor;
    /**
     *
     * @type {string}
     * @memberof DoctorReview
     */
    body?: string;
    /**
     *
     * @type {boolean}
     * @memberof DoctorReview
     */
    recommended?: boolean;
    /**
     *
     * @type {ReviewCategory}
     * @memberof DoctorReview
     */
    reviewCategory?: ReviewCategory;
    /**
     *
     * @type {number}
     * @memberof DoctorReview
     */
    rate?: number;
}
/**
 *
 * @export
 * @interface DoctorSpecialty
 */
export interface DoctorSpecialty {
    /**
     *
     * @type {string}
     * @memberof DoctorSpecialty
     */
    doctorId?: string;
    /**
     *
     * @type {Doctor}
     * @memberof DoctorSpecialty
     */
    doctor?: Doctor;
    /**
     *
     * @type {string}
     * @memberof DoctorSpecialty
     */
    specialtyId?: string;
    /**
     *
     * @type {Specialty}
     * @memberof DoctorSpecialty
     */
    specialty?: Specialty;
    /**
     *
     * @type {number}
     * @memberof DoctorSpecialty
     */
    order?: number;
}
/**
 *
 * @export
 * @interface DoctorViewModel
 */
export interface DoctorViewModel {
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    code?: string;
    /**
     *
     * @type {Date}
     * @memberof DoctorViewModel
     */
    startPracticeDate?: Date;
    /**
     *
     * @type {Array<DoctorReview>}
     * @memberof DoctorViewModel
     */
    reviews?: Array<DoctorReview>;
    /**
     *
     * @type {Array<DoctorLanguage>}
     * @memberof DoctorViewModel
     */
    languages?: Array<DoctorLanguage>;
    /**
     *
     * @type {Array<DoctorEducation>}
     * @memberof DoctorViewModel
     */
    educations?: Array<DoctorEducation>;
    /**
     *
     * @type {Array<DoctorPortfolio>}
     * @memberof DoctorViewModel
     */
    portfolios?: Array<DoctorPortfolio>;
    /**
     *
     * @type {Array<DoctorCertificate>}
     * @memberof DoctorViewModel
     */
    certificates?: Array<DoctorCertificate>;
    /**
     *
     * @type {Array<DoctorAffiliationViewModel>}
     * @memberof DoctorViewModel
     */
    doctorAffiliations?: Array<DoctorAffiliationViewModel>;
    /**
     *
     * @type {Array<AwardViewModel>}
     * @memberof DoctorViewModel
     */
    awards?: Array<AwardViewModel>;
    /**
     *
     * @type {Array<Specialty>}
     * @memberof DoctorViewModel
     */
    specialties?: Array<Specialty>;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    userType?: string;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof DoctorViewModel
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof DoctorViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof DoctorViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof DoctorViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof DoctorViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface DoctorsViewModel
 */
export interface DoctorsViewModel {
    /**
     *
     * @type {Array<UserItemViewModel>}
     * @memberof DoctorsViewModel
     */
    items?: Array<UserItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof DoctorsViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface Envelope
 */
export interface Envelope {
    /**
     *
     * @type {boolean}
     * @memberof Envelope
     */
    isNull?: boolean;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    width?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    height?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    minX?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    maxX?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    minY?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    maxY?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    area?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    minExtent?: number;
    /**
     *
     * @type {number}
     * @memberof Envelope
     */
    maxExtent?: number;
    /**
     *
     * @type {Coordinate}
     * @memberof Envelope
     */
    centre?: Coordinate;
}
/**
 *
 * @export
 * @interface Equipment
 */
export interface Equipment {
    /**
     *
     * @type {string}
     * @memberof Equipment
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Equipment
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Equipment
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Equipment
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof Equipment
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof Equipment
     */
    hospital?: Hospital;
    /**
     *
     * @type {Array<Media>}
     * @memberof Equipment
     */
    medias?: Array<Media>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Equipment
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface EquipmentItemViewModel
 */
export interface EquipmentItemViewModel {
    /**
     *
     * @type {string}
     * @memberof EquipmentItemViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentItemViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentItemViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentItemViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentItemViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof EquipmentItemViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof EquipmentItemViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface EquipmentViewModel
 */
export interface EquipmentViewModel {
    /**
     *
     * @type {string}
     * @memberof EquipmentViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof EquipmentViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof EquipmentViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof EquipmentViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface EquipmentsViewModel
 */
export interface EquipmentsViewModel {
    /**
     *
     * @type {Array<EquipmentItemViewModel>}
     * @memberof EquipmentsViewModel
     */
    items?: Array<EquipmentItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof EquipmentsViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum Gender {
    NotSpecified = "NotSpecified",
    Male = "Male",
    Female = "Female",
    NonBinary = "NonBinary",
    PreferNotToSay = "PreferNotToSay"
}
/**
 *
 * @export
 * @interface Geometry
 */
export interface Geometry {
    /**
     *
     * @type {GeometryFactory}
     * @memberof Geometry
     */
    factory?: GeometryFactory;
    /**
     *
     * @type {object}
     * @memberof Geometry
     */
    userData?: object;
    /**
     *
     * @type {number}
     * @memberof Geometry
     */
    srid?: number;
    /**
     *
     * @type {string}
     * @memberof Geometry
     */
    geometryType?: string;
    /**
     *
     * @type {OgcGeometryType}
     * @memberof Geometry
     */
    ogcGeometryType?: OgcGeometryType;
    /**
     *
     * @type {PrecisionModel}
     * @memberof Geometry
     */
    precisionModel?: PrecisionModel;
    /**
     *
     * @type {Coordinate}
     * @memberof Geometry
     */
    coordinate?: Coordinate;
    /**
     *
     * @type {Array<Coordinate>}
     * @memberof Geometry
     */
    coordinates?: Array<Coordinate>;
    /**
     *
     * @type {number}
     * @memberof Geometry
     */
    numPoints?: number;
    /**
     *
     * @type {number}
     * @memberof Geometry
     */
    numGeometries?: number;
    /**
     *
     * @type {boolean}
     * @memberof Geometry
     */
    isSimple?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Geometry
     */
    isValid?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Geometry
     */
    isEmpty?: boolean;
    /**
     *
     * @type {number}
     * @memberof Geometry
     */
    area?: number;
    /**
     *
     * @type {number}
     * @memberof Geometry
     */
    length?: number;
    /**
     *
     * @type {Point}
     * @memberof Geometry
     */
    centroid?: Point;
    /**
     *
     * @type {Point}
     * @memberof Geometry
     */
    interiorPoint?: Point;
    /**
     *
     * @type {Point}
     * @memberof Geometry
     */
    pointOnSurface?: Point;
    /**
     *
     * @type {Dimension}
     * @memberof Geometry
     */
    dimension?: Dimension;
    /**
     *
     * @type {Geometry}
     * @memberof Geometry
     */
    boundary?: Geometry;
    /**
     *
     * @type {Dimension}
     * @memberof Geometry
     */
    boundaryDimension?: Dimension;
    /**
     *
     * @type {Geometry}
     * @memberof Geometry
     */
    envelope?: Geometry;
    /**
     *
     * @type {Envelope}
     * @memberof Geometry
     */
    envelopeInternal?: Envelope;
    /**
     *
     * @type {boolean}
     * @memberof Geometry
     */
    isRectangle?: boolean;
}
/**
 *
 * @export
 * @interface GeometryFactory
 */
export interface GeometryFactory {
    /**
     *
     * @type {PrecisionModel}
     * @memberof GeometryFactory
     */
    precisionModel?: PrecisionModel;
    /**
     *
     * @type {CoordinateSequenceFactory}
     * @memberof GeometryFactory
     */
    coordinateSequenceFactory?: CoordinateSequenceFactory;
    /**
     *
     * @type {number}
     * @memberof GeometryFactory
     */
    srid?: number;
}
/**
 *
 * @export
 * @interface Hospital
 */
export interface Hospital {
    /**
     *
     * @type {string}
     * @memberof Hospital
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Hospital
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Hospital
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Hospital
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof Hospital
     */
    logo?: string;
    /**
     *
     * @type {string}
     * @memberof Hospital
     */
    overview?: string;
    /**
     *
     * @type {number}
     * @memberof Hospital
     */
    bedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof Hospital
     */
    operationRoomsCount?: number;
    /**
     *
     * @type {number}
     * @memberof Hospital
     */
    icuBedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof Hospital
     */
    medicalStaffCount?: number;
    /**
     *
     * @type {string}
     * @memberof Hospital
     */
    countryId?: string;
    /**
     *
     * @type {Country}
     * @memberof Hospital
     */
    country?: Country;
    /**
     *
     * @type {Array<Article>}
     * @memberof Hospital
     */
    articles?: Array<Article>;
    /**
     *
     * @type {Array<Package>}
     * @memberof Hospital
     */
    packages?: Array<Package>;
    /**
     *
     * @type {Array<Equipment>}
     * @memberof Hospital
     */
    equipments?: Array<Equipment>;
    /**
     *
     * @type {Array<HospitalReview>}
     * @memberof Hospital
     */
    reviews?: Array<HospitalReview>;
    /**
     *
     * @type {Array<Department>}
     * @memberof Hospital
     */
    departments?: Array<Department>;
    /**
     *
     * @type {Array<HospitalSpecialty>}
     * @memberof Hospital
     */
    specialties?: Array<HospitalSpecialty>;
    /**
     *
     * @type {Array<HospitalAccreditation>}
     * @memberof Hospital
     */
    accreditations?: Array<HospitalAccreditation>;
    /**
     *
     * @type {Array<DoctorAffiliation>}
     * @memberof Hospital
     */
    doctorAffiliations?: Array<DoctorAffiliation>;
    /**
     *
     * @type {Array<ManagerAffiliation>}
     * @memberof Hospital
     */
    managerAffiliations?: Array<ManagerAffiliation>;
    /**
     *
     * @type {Array<Award>}
     * @memberof Hospital
     */
    awards?: Array<Award>;
    /**
     *
     * @type {Array<Media>}
     * @memberof Hospital
     */
    medias?: Array<Media>;
    /**
     *
     * @type {Location}
     * @memberof Hospital
     */
    location?: Location;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Hospital
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface HospitalAccreditation
 */
export interface HospitalAccreditation {
    /**
     *
     * @type {string}
     * @memberof HospitalAccreditation
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof HospitalAccreditation
     */
    hospital?: Hospital;
    /**
     *
     * @type {string}
     * @memberof HospitalAccreditation
     */
    accreditationId?: string;
    /**
     *
     * @type {Accreditation}
     * @memberof HospitalAccreditation
     */
    accreditation?: Accreditation;
}
/**
 *
 * @export
 * @interface HospitalItemViewModel
 */
export interface HospitalItemViewModel {
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    logo?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    overview?: string;
    /**
     *
     * @type {number}
     * @memberof HospitalItemViewModel
     */
    bedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof HospitalItemViewModel
     */
    operationRoomsCount?: number;
    /**
     *
     * @type {number}
     * @memberof HospitalItemViewModel
     */
    icuBedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof HospitalItemViewModel
     */
    medicalStaffCount?: number;
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    countryId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalItemViewModel
     */
    countryName?: string;
    /**
     *
     * @type {Array<AwardViewModel>}
     * @memberof HospitalItemViewModel
     */
    awards?: Array<AwardViewModel>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof HospitalItemViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {LocationViewModel}
     * @memberof HospitalItemViewModel
     */
    location?: LocationViewModel;
    /**
     *
     * @type {AuditableEntity}
     * @memberof HospitalItemViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface HospitalReview
 */
export interface HospitalReview {
    /**
     *
     * @type {string}
     * @memberof HospitalReview
     */
    patientId?: string;
    /**
     *
     * @type {Patient}
     * @memberof HospitalReview
     */
    patient?: Patient;
    /**
     *
     * @type {string}
     * @memberof HospitalReview
     */
    hospitaltId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof HospitalReview
     */
    hospital?: Hospital;
    /**
     *
     * @type {string}
     * @memberof HospitalReview
     */
    body?: string;
    /**
     *
     * @type {boolean}
     * @memberof HospitalReview
     */
    recommended?: boolean;
    /**
     *
     * @type {ReviewCategory}
     * @memberof HospitalReview
     */
    reviewCategory?: ReviewCategory;
    /**
     *
     * @type {number}
     * @memberof HospitalReview
     */
    rate?: number;
}
/**
 *
 * @export
 * @interface HospitalSpecialtiesViewModel
 */
export interface HospitalSpecialtiesViewModel {
    /**
     *
     * @type {Array<HospitalSpecialtyItemViewModel>}
     * @memberof HospitalSpecialtiesViewModel
     */
    items?: Array<HospitalSpecialtyItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof HospitalSpecialtiesViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface HospitalSpecialty
 */
export interface HospitalSpecialty {
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialty
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof HospitalSpecialty
     */
    hospital?: Hospital;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialty
     */
    specialtyId?: string;
    /**
     *
     * @type {Specialty}
     * @memberof HospitalSpecialty
     */
    specialty?: Specialty;
    /**
     *
     * @type {number}
     * @memberof HospitalSpecialty
     */
    order?: number;
    /**
     *
     * @type {Array<Service>}
     * @memberof HospitalSpecialty
     */
    services?: Array<Service>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof HospitalSpecialty
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface HospitalSpecialtyItemViewModel
 */
export interface HospitalSpecialtyItemViewModel {
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyItemViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyItemViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyItemViewModel
     */
    specialtyId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyItemViewModel
     */
    specialtyName?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyItemViewModel
     */
    specialtyTypeId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyItemViewModel
     */
    specialtyTypeName?: string;
    /**
     *
     * @type {number}
     * @memberof HospitalSpecialtyItemViewModel
     */
    order?: number;
    /**
     *
     * @type {Date}
     * @memberof HospitalSpecialtyItemViewModel
     */
    created?: Date;
}
/**
 *
 * @export
 * @interface HospitalSpecialtyViewModel
 */
export interface HospitalSpecialtyViewModel {
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyViewModel
     */
    specialtyId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyViewModel
     */
    specialtyName?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyViewModel
     */
    specialtyTypeId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalSpecialtyViewModel
     */
    specialtyTypeName?: string;
    /**
     *
     * @type {number}
     * @memberof HospitalSpecialtyViewModel
     */
    order?: number;
    /**
     *
     * @type {Date}
     * @memberof HospitalSpecialtyViewModel
     */
    created?: Date;
}
/**
 *
 * @export
 * @interface HospitalViewModel
 */
export interface HospitalViewModel {
    /**
     *
     * @type {Array<ArticleItemViewModel>}
     * @memberof HospitalViewModel
     */
    articles?: Array<ArticleItemViewModel>;
    /**
     *
     * @type {Array<EquipmentItemViewModel>}
     * @memberof HospitalViewModel
     */
    equipments?: Array<EquipmentItemViewModel>;
    /**
     *
     * @type {Array<HospitalSpecialtyItemViewModel>}
     * @memberof HospitalViewModel
     */
    specialties?: Array<HospitalSpecialtyItemViewModel>;
    /**
     *
     * @type {Array<DoctorAffiliationItemViewModel>}
     * @memberof HospitalViewModel
     */
    doctorAffiliations?: Array<DoctorAffiliationItemViewModel>;
    /**
     *
     * @type {Array<ManagerAffiliationItemViewModel>}
     * @memberof HospitalViewModel
     */
    managerAffiliations?: Array<ManagerAffiliationItemViewModel>;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    logo?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    overview?: string;
    /**
     *
     * @type {number}
     * @memberof HospitalViewModel
     */
    bedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof HospitalViewModel
     */
    operationRoomsCount?: number;
    /**
     *
     * @type {number}
     * @memberof HospitalViewModel
     */
    icuBedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof HospitalViewModel
     */
    medicalStaffCount?: number;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    countryId?: string;
    /**
     *
     * @type {string}
     * @memberof HospitalViewModel
     */
    countryName?: string;
    /**
     *
     * @type {Array<AwardViewModel>}
     * @memberof HospitalViewModel
     */
    awards?: Array<AwardViewModel>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof HospitalViewModel
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {LocationViewModel}
     * @memberof HospitalViewModel
     */
    location?: LocationViewModel;
    /**
     *
     * @type {AuditableEntity}
     * @memberof HospitalViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface HospitalsViewModel
 */
export interface HospitalsViewModel {
    /**
     *
     * @type {Array<HospitalItemViewModel>}
     * @memberof HospitalsViewModel
     */
    items?: Array<HospitalItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof HospitalsViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface Location
 */
export interface Location {
    /**
     *
     * @type {Point}
     * @memberof Location
     */
    point?: Point;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    county?: string;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    zipCode?: string;
    /**
     *
     * @type {string}
     * @memberof Location
     */
    address?: string;
}
/**
 *
 * @export
 * @interface LocationViewModel
 */
export interface LocationViewModel {
    /**
     *
     * @type {number}
     * @memberof LocationViewModel
     */
    latitude?: number;
    /**
     *
     * @type {number}
     * @memberof LocationViewModel
     */
    longitude?: number;
    /**
     *
     * @type {string}
     * @memberof LocationViewModel
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof LocationViewModel
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof LocationViewModel
     */
    county?: string;
    /**
     *
     * @type {string}
     * @memberof LocationViewModel
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof LocationViewModel
     */
    zipCode?: string;
    /**
     *
     * @type {string}
     * @memberof LocationViewModel
     */
    address?: string;
}
/**
 *
 * @export
 * @interface Manager
 */
export interface Manager {
    /**
     *
     * @type {Array<ManagerAffiliation>}
     * @memberof Manager
     */
    affiliations?: Array<ManagerAffiliation>;
    /**
     *
     * @type {Array<Account>}
     * @memberof Manager
     */
    accounts?: Array<Account>;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof Manager
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof Manager
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof Manager
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<Device>}
     * @memberof Manager
     */
    devices?: Array<Device>;
    /**
     *
     * @type {Array<Article>}
     * @memberof Manager
     */
    articles?: Array<Article>;
    /**
     *
     * @type {Array<Media>}
     * @memberof Manager
     */
    medias?: Array<Media>;
    /**
     *
     * @type {Array<UserLocation>}
     * @memberof Manager
     */
    locations?: Array<UserLocation>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Manager
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface ManagerAffiliation
 */
export interface ManagerAffiliation {
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliation
     */
    managerId?: string;
    /**
     *
     * @type {Manager}
     * @memberof ManagerAffiliation
     */
    manager?: Manager;
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliation
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof ManagerAffiliation
     */
    hospital?: Hospital;
}
/**
 *
 * @export
 * @interface ManagerAffiliationItemViewModel
 */
export interface ManagerAffiliationItemViewModel {
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationItemViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationItemViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationItemViewModel
     */
    managerId?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationItemViewModel
     */
    managerName?: string;
}
/**
 *
 * @export
 * @interface ManagerAffiliationViewModel
 */
export interface ManagerAffiliationViewModel {
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationViewModel
     */
    hospitalName?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationViewModel
     */
    managerId?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerAffiliationViewModel
     */
    managerName?: string;
}
/**
 *
 * @export
 * @interface ManagerViewModel
 */
export interface ManagerViewModel {
    /**
     *
     * @type {Array<ManagerAffiliationViewModel>}
     * @memberof ManagerViewModel
     */
    managerAffiliations?: Array<ManagerAffiliationViewModel>;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    userType?: string;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof ManagerViewModel
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof ManagerViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof ManagerViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof ManagerViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof ManagerViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface ManagersViewModel
 */
export interface ManagersViewModel {
    /**
     *
     * @type {Array<UserItemViewModel>}
     * @memberof ManagersViewModel
     */
    items?: Array<UserItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof ManagersViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface Media
 */
export interface Media {
    /**
     *
     * @type {string}
     * @memberof Media
     */
    id?: string;
    /**
     *
     * @type {MediaType}
     * @memberof Media
     */
    mediaType?: MediaType;
    /**
     *
     * @type {string}
     * @memberof Media
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof Media
     */
    thumbnailUrl?: string;
    /**
     *
     * @type {string}
     * @memberof Media
     */
    description?: string;
    /**
     *
     * @type {number}
     * @memberof Media
     */
    height?: number;
    /**
     *
     * @type {number}
     * @memberof Media
     */
    width?: number;
    /**
     *
     * @type {number}
     * @memberof Media
     */
    order?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum MediaType {
    Photo = "Photo",
    Video = "Video",
    Youtube = "Youtube",
    Document = "Document"
}
/**
 *
 * @export
 * @interface MediaViewModel
 */
export interface MediaViewModel {
    /**
     *
     * @type {string}
     * @memberof MediaViewModel
     */
    id?: string;
    /**
     *
     * @type {MediaType}
     * @memberof MediaViewModel
     */
    mediaType?: MediaType;
    /**
     *
     * @type {string}
     * @memberof MediaViewModel
     */
    url?: string;
    /**
     *
     * @type {string}
     * @memberof MediaViewModel
     */
    thumbnailUrl?: string;
    /**
     *
     * @type {string}
     * @memberof MediaViewModel
     */
    description?: string;
    /**
     *
     * @type {number}
     * @memberof MediaViewModel
     */
    order?: number;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum OgcGeometryType {
    Point = "Point",
    LineString = "LineString",
    Polygon = "Polygon",
    MultiPoint = "MultiPoint",
    MultiLineString = "MultiLineString",
    MultiPolygon = "MultiPolygon",
    GeometryCollection = "GeometryCollection",
    CircularString = "CircularString",
    CompoundCurve = "CompoundCurve",
    CurvePolygon = "CurvePolygon",
    MultiCurve = "MultiCurve",
    MultiSurface = "MultiSurface",
    Curve = "Curve",
    Surface = "Surface",
    PolyhedralSurface = "PolyhedralSurface",
    TIN = "TIN"
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum Ordinates {
    None = "None",
    Spatial1 = "Spatial1",
    Spatial2 = "Spatial2",
    XY = "XY",
    Z = "Z",
    XYZ = "XYZ",
    Spatial4 = "Spatial4",
    Spatial5 = "Spatial5",
    Spatial6 = "Spatial6",
    Spatial7 = "Spatial7",
    Spatial8 = "Spatial8",
    Spatial9 = "Spatial9",
    Spatial10 = "Spatial10",
    Spatial11 = "Spatial11",
    Spatial12 = "Spatial12",
    Spatial13 = "Spatial13",
    Spatial14 = "Spatial14",
    Spatial15 = "Spatial15",
    Spatial16 = "Spatial16",
    AllSpatialOrdinates = "AllSpatialOrdinates",
    M = "M",
    XYM = "XYM",
    XYZM = "XYZM",
    Measure2 = "Measure2",
    Measure3 = "Measure3",
    Measure4 = "Measure4",
    Measure5 = "Measure5",
    Measure6 = "Measure6",
    Measure7 = "Measure7",
    Measure8 = "Measure8",
    Measure9 = "Measure9",
    Measure10 = "Measure10",
    Measure11 = "Measure11",
    Measure12 = "Measure12",
    Measure13 = "Measure13",
    Measure14 = "Measure14",
    Measure15 = "Measure15",
    Measure16 = "Measure16",
    AllMeasureOrdinates = "AllMeasureOrdinates",
    AllOrdinates = "AllOrdinates"
}
/**
 *
 * @export
 * @interface Package
 */
export interface Package {
    /**
     *
     * @type {string}
     * @memberof Package
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Package
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Package
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Package
     */
    hospitalId?: string;
    /**
     *
     * @type {Hospital}
     * @memberof Package
     */
    hospital?: Hospital;
    /**
     *
     * @type {PackageStatus}
     * @memberof Package
     */
    packageStatus?: PackageStatus;
    /**
     *
     * @type {string}
     * @memberof Package
     */
    accomodation?: string;
    /**
     *
     * @type {string}
     * @memberof Package
     */
    trnasfer?: string;
    /**
     *
     * @type {string}
     * @memberof Package
     */
    bonus?: string;
    /**
     *
     * @type {number}
     * @memberof Package
     */
    packagePrice?: number;
    /**
     *
     * @type {Array<Manager>}
     * @memberof Package
     */
    managers?: Array<Manager>;
    /**
     *
     * @type {Array<Service>}
     * @memberof Package
     */
    services?: Array<Service>;
    /**
     *
     * @type {Array<Booking>}
     * @memberof Package
     */
    bookings?: Array<Booking>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Package
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum PackageStatus {
    New = "New",
    Standard = "Standard"
}
/**
 *
 * @export
 * @interface PagedListMetaData
 */
export interface PagedListMetaData {
    /**
     *
     * @type {number}
     * @memberof PagedListMetaData
     */
    pageCount?: number;
    /**
     *
     * @type {number}
     * @memberof PagedListMetaData
     */
    totalItemCount?: number;
    /**
     *
     * @type {number}
     * @memberof PagedListMetaData
     */
    pageNumber?: number;
    /**
     *
     * @type {number}
     * @memberof PagedListMetaData
     */
    pageSize?: number;
    /**
     *
     * @type {boolean}
     * @memberof PagedListMetaData
     */
    hasPreviousPage?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PagedListMetaData
     */
    hasNextPage?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PagedListMetaData
     */
    isFirstPage?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof PagedListMetaData
     */
    isLastPage?: boolean;
    /**
     *
     * @type {number}
     * @memberof PagedListMetaData
     */
    firstItemOnPage?: number;
    /**
     *
     * @type {number}
     * @memberof PagedListMetaData
     */
    lastItemOnPage?: number;
}
/**
 *
 * @export
 * @interface PartnerViewModel
 */
export interface PartnerViewModel {
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    referralCode?: string;
    /**
     *
     * @type {number}
     * @memberof PartnerViewModel
     */
    referralCount?: number;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    userType?: string;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof PartnerViewModel
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof PartnerViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof PartnerViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof PartnerViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof PartnerViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface PartnersViewModel
 */
export interface PartnersViewModel {
    /**
     *
     * @type {Array<UserItemViewModel>}
     * @memberof PartnersViewModel
     */
    items?: Array<UserItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof PartnersViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface Patient
 */
export interface Patient {
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    contact?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    contactNumber?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    nationality?: string;
    /**
     *
     * @type {Array<Booking>}
     * @memberof Patient
     */
    bookings?: Array<Booking>;
    /**
     *
     * @type {Array<Payment>}
     * @memberof Patient
     */
    payments?: Array<Payment>;
    /**
     *
     * @type {Array<Customer>}
     * @memberof Patient
     */
    customers?: Array<Customer>;
    /**
     *
     * @type {Array<DoctorReview>}
     * @memberof Patient
     */
    doctorReviews?: Array<DoctorReview>;
    /**
     *
     * @type {Array<HospitalReview>}
     * @memberof Patient
     */
    hospitalReviews?: Array<HospitalReview>;
    /**
     *
     * @type {Array<BookingComment>}
     * @memberof Patient
     */
    bookingComments?: Array<BookingComment>;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof Patient
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof Patient
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof Patient
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<Device>}
     * @memberof Patient
     */
    devices?: Array<Device>;
    /**
     *
     * @type {Array<Article>}
     * @memberof Patient
     */
    articles?: Array<Article>;
    /**
     *
     * @type {Array<Media>}
     * @memberof Patient
     */
    medias?: Array<Media>;
    /**
     *
     * @type {Array<UserLocation>}
     * @memberof Patient
     */
    locations?: Array<UserLocation>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Patient
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface PatientViewModel
 */
export interface PatientViewModel {
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    contact?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    contactNumber?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    nationality?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    userType?: string;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof PatientViewModel
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof PatientViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof PatientViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof PatientViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof PatientViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface PatientsViewModel
 */
export interface PatientsViewModel {
    /**
     *
     * @type {Array<UserItemViewModel>}
     * @memberof PatientsViewModel
     */
    items?: Array<UserItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof PatientsViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    patientId?: string;
    /**
     *
     * @type {Patient}
     * @memberof Payment
     */
    patient?: Patient;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    customerId?: string;
    /**
     *
     * @type {Customer}
     * @memberof Payment
     */
    customer?: Customer;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    bookingId?: string;
    /**
     *
     * @type {Booking}
     * @memberof Payment
     */
    booking?: Booking;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    chargeId?: string;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    refundId?: string;
    /**
     *
     * @type {ChargeStatus}
     * @memberof Payment
     */
    chargeStatus?: ChargeStatus;
    /**
     *
     * @type {RefundStatus}
     * @memberof Payment
     */
    refundStatus?: RefundStatus;
    /**
     *
     * @type {PaymentStatus}
     * @memberof Payment
     */
    paymentStatus?: PaymentStatus;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    currency?: string;
    /**
     *
     * @type {number}
     * @memberof Payment
     */
    fee?: number;
    /**
     *
     * @type {number}
     * @memberof Payment
     */
    applicationFee?: number;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    cardBrand?: string;
    /**
     *
     * @type {string}
     * @memberof Payment
     */
    cardLast4Digits?: string;
    /**
     *
     * @type {Array<ChangeLog>}
     * @memberof Payment
     */
    paymentStatusChangeLogs?: Array<ChangeLog>;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum PaymentStatus {
    Unpaid = "Unpaid",
    Paid = "Paid",
    RefundRequested = "RefundRequested",
    Refunded = "Refunded"
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum Platform {
    Web = "Web",
    IOS = "iOS",
    Android = "Android"
}
/**
 *
 * @export
 * @interface Point
 */
export interface Point {
    /**
     *
     * @type {CoordinateSequence}
     * @memberof Point
     */
    coordinateSequence?: CoordinateSequence;
    /**
     *
     * @type {Array<Coordinate>}
     * @memberof Point
     */
    coordinates?: Array<Coordinate>;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    numPoints?: number;
    /**
     *
     * @type {boolean}
     * @memberof Point
     */
    isEmpty?: boolean;
    /**
     *
     * @type {Dimension}
     * @memberof Point
     */
    dimension?: Dimension;
    /**
     *
     * @type {Dimension}
     * @memberof Point
     */
    boundaryDimension?: Dimension;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    x?: number;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    y?: number;
    /**
     *
     * @type {Coordinate}
     * @memberof Point
     */
    coordinate?: Coordinate;
    /**
     *
     * @type {string}
     * @memberof Point
     */
    geometryType?: string;
    /**
     *
     * @type {OgcGeometryType}
     * @memberof Point
     */
    ogcGeometryType?: OgcGeometryType;
    /**
     *
     * @type {Geometry}
     * @memberof Point
     */
    boundary?: Geometry;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    z?: number;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    m?: number;
    /**
     *
     * @type {GeometryFactory}
     * @memberof Point
     */
    factory?: GeometryFactory;
    /**
     *
     * @type {object}
     * @memberof Point
     */
    userData?: object;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    srid?: number;
    /**
     *
     * @type {PrecisionModel}
     * @memberof Point
     */
    precisionModel?: PrecisionModel;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    numGeometries?: number;
    /**
     *
     * @type {boolean}
     * @memberof Point
     */
    isSimple?: boolean;
    /**
     *
     * @type {boolean}
     * @memberof Point
     */
    isValid?: boolean;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    area?: number;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    length?: number;
    /**
     *
     * @type {Point}
     * @memberof Point
     */
    centroid?: Point;
    /**
     *
     * @type {Point}
     * @memberof Point
     */
    interiorPoint?: Point;
    /**
     *
     * @type {Point}
     * @memberof Point
     */
    pointOnSurface?: Point;
    /**
     *
     * @type {Geometry}
     * @memberof Point
     */
    envelope?: Geometry;
    /**
     *
     * @type {Envelope}
     * @memberof Point
     */
    envelopeInternal?: Envelope;
    /**
     *
     * @type {boolean}
     * @memberof Point
     */
    isRectangle?: boolean;
}
/**
 *
 * @export
 * @interface PrecisionModel
 */
export interface PrecisionModel {
    /**
     *
     * @type {boolean}
     * @memberof PrecisionModel
     */
    isFloating?: boolean;
    /**
     *
     * @type {number}
     * @memberof PrecisionModel
     */
    maximumSignificantDigits?: number;
    /**
     *
     * @type {number}
     * @memberof PrecisionModel
     */
    scale?: number;
    /**
     *
     * @type {PrecisionModels}
     * @memberof PrecisionModel
     */
    precisionModelType?: PrecisionModels;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum PrecisionModels {
    Floating = "Floating",
    FloatingSingle = "FloatingSingle",
    Fixed = "Fixed"
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum Procedure {
    Treatment = "Treatment",
    Diagnostic = "Diagnostic"
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum RefundStatus {
    Pending = "Pending",
    Succeeded = "Succeeded",
    Failed = "Failed"
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum RejectReason {
    AssessmentNotCompleted = "AssessmentNotCompleted",
    PaymentNotCompleted = "PaymentNotCompleted",
    ScheduleNotAvailable = "ScheduleNotAvailable",
    OtherReason = "OtherReason"
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum ReviewCategory {
    Services = "Services",
    Hospitality = "Hospitality",
    Transfer = "Transfer",
    Etc = "Etc"
}
/**
 *
 * @export
 * @interface Service
 */
export interface Service {
    /**
     *
     * @type {string}
     * @memberof Service
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Service
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Service
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Service
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof Service
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof Service
     */
    specialtyId?: string;
    /**
     *
     * @type {HospitalSpecialty}
     * @memberof Service
     */
    hospitalSpecialty?: HospitalSpecialty;
    /**
     *
     * @type {Procedure}
     * @memberof Service
     */
    procedure?: Procedure;
    /**
     *
     * @type {number}
     * @memberof Service
     */
    minPrice?: number;
    /**
     *
     * @type {number}
     * @memberof Service
     */
    maxPrice?: number;
    /**
     *
     * @type {boolean}
     * @memberof Service
     */
    priceReuqest?: boolean;
    /**
     *
     * @type {number}
     * @memberof Service
     */
    order?: number;
    /**
     *
     * @type {Array<Assessment>}
     * @memberof Service
     */
    assessments?: Array<Assessment>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Service
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface ServiceItemViewModel
 */
export interface ServiceItemViewModel {
    /**
     *
     * @type {string}
     * @memberof ServiceItemViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceItemViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceItemViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceItemViewModel
     */
    specialtyType?: string;
    /**
     *
     * @type {Procedure}
     * @memberof ServiceItemViewModel
     */
    procedure?: Procedure;
    /**
     *
     * @type {number}
     * @memberof ServiceItemViewModel
     */
    minPrice?: number;
    /**
     *
     * @type {number}
     * @memberof ServiceItemViewModel
     */
    maxPrice?: number;
    /**
     *
     * @type {boolean}
     * @memberof ServiceItemViewModel
     */
    priceReuqest?: boolean;
    /**
     *
     * @type {number}
     * @memberof ServiceItemViewModel
     */
    order?: number;
    /**
     *
     * @type {AuditableEntity}
     * @memberof ServiceItemViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface ServiceViewModel
 */
export interface ServiceViewModel {
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    specialtyId?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    specialtyTypeId?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    specialtyTypeName?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceViewModel
     */
    specialtyType?: string;
    /**
     *
     * @type {Procedure}
     * @memberof ServiceViewModel
     */
    procedure?: Procedure;
    /**
     *
     * @type {number}
     * @memberof ServiceViewModel
     */
    minPrice?: number;
    /**
     *
     * @type {number}
     * @memberof ServiceViewModel
     */
    maxPrice?: number;
    /**
     *
     * @type {boolean}
     * @memberof ServiceViewModel
     */
    priceReuqest?: boolean;
    /**
     *
     * @type {number}
     * @memberof ServiceViewModel
     */
    order?: number;
    /**
     *
     * @type {AuditableEntity}
     * @memberof ServiceViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface ServicesViewModel
 */
export interface ServicesViewModel {
    /**
     *
     * @type {Array<ServiceItemViewModel>}
     * @memberof ServicesViewModel
     */
    items?: Array<ServiceItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof ServicesViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface SpecialtiesViewModel
 */
export interface SpecialtiesViewModel {
    /**
     *
     * @type {Array<SpecialtyItemViewModel>}
     * @memberof SpecialtiesViewModel
     */
    items?: Array<SpecialtyItemViewModel>;
    /**
     *
     * @type {PagedListMetaData}
     * @memberof SpecialtiesViewModel
     */
    metaData?: PagedListMetaData;
}
/**
 *
 * @export
 * @interface Specialty
 */
export interface Specialty {
    /**
     *
     * @type {string}
     * @memberof Specialty
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Specialty
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Specialty
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof Specialty
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof Specialty
     */
    specialtyTypeId?: string;
    /**
     *
     * @type {SpecialtyType}
     * @memberof Specialty
     */
    specialtyType?: SpecialtyType;
    /**
     *
     * @type {Array<HospitalSpecialty>}
     * @memberof Specialty
     */
    hospitalSpecialties?: Array<HospitalSpecialty>;
    /**
     *
     * @type {Array<DoctorSpecialty>}
     * @memberof Specialty
     */
    doctorSpecialties?: Array<DoctorSpecialty>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof Specialty
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface SpecialtyItemViewModel
 */
export interface SpecialtyItemViewModel {
    /**
     *
     * @type {string}
     * @memberof SpecialtyItemViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyItemViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyItemViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyItemViewModel
     */
    specialtyTypeId?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyItemViewModel
     */
    specialtyTypeName?: string;
    /**
     *
     * @type {AuditableEntity}
     * @memberof SpecialtyItemViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface SpecialtyType
 */
export interface SpecialtyType {
    /**
     *
     * @type {string}
     * @memberof SpecialtyType
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyType
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyType
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyType
     */
    description?: string;
    /**
     *
     * @type {AuditableEntity}
     * @memberof SpecialtyType
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface SpecialtyViewModel
 */
export interface SpecialtyViewModel {
    /**
     *
     * @type {string}
     * @memberof SpecialtyViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyViewModel
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyViewModel
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyViewModel
     */
    specialtyTypeId?: string;
    /**
     *
     * @type {string}
     * @memberof SpecialtyViewModel
     */
    specialtyTypeName?: string;
    /**
     *
     * @type {AuditableEntity}
     * @memberof SpecialtyViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface Tag
 */
export interface Tag {
    /**
     *
     * @type {string}
     * @memberof Tag
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Tag
     */
    value?: string;
    /**
     *
     * @type {number}
     * @memberof Tag
     */
    order?: number;
}
/**
 *
 * @export
 * @interface UpdateArticleCommand
 */
export interface UpdateArticleCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateArticleCommand
     */
    title?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateArticleCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateArticleCommand
     */
    body?: string;
    /**
     *
     * @type {ArticleStatus}
     * @memberof UpdateArticleCommand
     */
    status?: ArticleStatus;
    /**
     *
     * @type {Array<Tag>}
     * @memberof UpdateArticleCommand
     */
    tags?: Array<Tag>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof UpdateArticleCommand
     */
    medias?: Array<MediaViewModel>;
}
/**
 *
 * @export
 * @interface UpdateBookingCommand
 */
export interface UpdateBookingCommand {
    /**
     *
     * @type {Date}
     * @memberof UpdateBookingCommand
     */
    approximateDateStart?: Date;
    /**
     *
     * @type {Date}
     * @memberof UpdateBookingCommand
     */
    approximateDateEnd?: Date;
}
/**
 *
 * @export
 * @interface UpdateCHAdminCommand
 */
export interface UpdateCHAdminCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateCHAdminCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCHAdminCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCHAdminCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCHAdminCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UpdateCHAdminCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UpdateCHAdminCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof UpdateCHAdminCommand
     */
    locations?: Array<UserLocationViewModel>;
}
/**
 *
 * @export
 * @interface UpdateCHManagerCommand
 */
export interface UpdateCHManagerCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateCHManagerCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCHManagerCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCHManagerCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCHManagerCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UpdateCHManagerCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UpdateCHManagerCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof UpdateCHManagerCommand
     */
    locations?: Array<UserLocationViewModel>;
}
/**
 *
 * @export
 * @interface UpdateCountryCommand
 */
export interface UpdateCountryCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateCountryCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateCountryCommand
     */
    description?: string;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof UpdateCountryCommand
     */
    medias?: Array<MediaViewModel>;
}
/**
 *
 * @export
 * @interface UpdateDoctorCommand
 */
export interface UpdateDoctorCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateDoctorCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateDoctorCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateDoctorCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateDoctorCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UpdateDoctorCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UpdateDoctorCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof UpdateDoctorCommand
     */
    locations?: Array<UserLocationViewModel>;
}
/**
 *
 * @export
 * @interface UpdateEquipmentCommand
 */
export interface UpdateEquipmentCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateEquipmentCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateEquipmentCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateEquipmentCommand
     */
    hospitalId?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateEquipmentCommand
     */
    hospitalName?: string;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof UpdateEquipmentCommand
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof UpdateEquipmentCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface UpdateHospitalCommand
 */
export interface UpdateHospitalCommand {
    /**
     *
     * @type {Array<ArticleItemViewModel>}
     * @memberof UpdateHospitalCommand
     */
    articles?: Array<ArticleItemViewModel>;
    /**
     *
     * @type {Array<EquipmentItemViewModel>}
     * @memberof UpdateHospitalCommand
     */
    equipments?: Array<EquipmentItemViewModel>;
    /**
     *
     * @type {Array<HospitalSpecialtyItemViewModel>}
     * @memberof UpdateHospitalCommand
     */
    specialties?: Array<HospitalSpecialtyItemViewModel>;
    /**
     *
     * @type {Array<DoctorAffiliationItemViewModel>}
     * @memberof UpdateHospitalCommand
     */
    doctorAffiliations?: Array<DoctorAffiliationItemViewModel>;
    /**
     *
     * @type {Array<ManagerAffiliationItemViewModel>}
     * @memberof UpdateHospitalCommand
     */
    managerAffiliations?: Array<ManagerAffiliationItemViewModel>;
    /**
     *
     * @type {string}
     * @memberof UpdateHospitalCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateHospitalCommand
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateHospitalCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateHospitalCommand
     */
    logo?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateHospitalCommand
     */
    overview?: string;
    /**
     *
     * @type {number}
     * @memberof UpdateHospitalCommand
     */
    bedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateHospitalCommand
     */
    operationRoomsCount?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateHospitalCommand
     */
    icuBedsCount?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateHospitalCommand
     */
    medicalStaffCount?: number;
    /**
     *
     * @type {string}
     * @memberof UpdateHospitalCommand
     */
    countryName?: string;
    /**
     *
     * @type {Array<AwardViewModel>}
     * @memberof UpdateHospitalCommand
     */
    awards?: Array<AwardViewModel>;
    /**
     *
     * @type {Array<MediaViewModel>}
     * @memberof UpdateHospitalCommand
     */
    medias?: Array<MediaViewModel>;
    /**
     *
     * @type {LocationViewModel}
     * @memberof UpdateHospitalCommand
     */
    location?: LocationViewModel;
    /**
     *
     * @type {AuditableEntity}
     * @memberof UpdateHospitalCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface UpdateHospitalSpecialtySequenceCommand
 */
export interface UpdateHospitalSpecialtySequenceCommand {
    /**
     *
     * @type {Array<string>}
     * @memberof UpdateHospitalSpecialtySequenceCommand
     */
    hospitalSpecialtySequence?: Array<string>;
}
/**
 *
 * @export
 * @interface UpdateManagerCommand
 */
export interface UpdateManagerCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateManagerCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateManagerCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateManagerCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateManagerCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UpdateManagerCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UpdateManagerCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof UpdateManagerCommand
     */
    locations?: Array<UserLocationViewModel>;
}
/**
 *
 * @export
 * @interface UpdatePartnerCommand
 */
export interface UpdatePartnerCommand {
    /**
     *
     * @type {string}
     * @memberof UpdatePartnerCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePartnerCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePartnerCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePartnerCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UpdatePartnerCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UpdatePartnerCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof UpdatePartnerCommand
     */
    locations?: Array<UserLocationViewModel>;
}
/**
 *
 * @export
 * @interface UpdatePatientCommand
 */
export interface UpdatePatientCommand {
    /**
     *
     * @type {string}
     * @memberof UpdatePatientCommand
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePatientCommand
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePatientCommand
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UpdatePatientCommand
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UpdatePatientCommand
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UpdatePatientCommand
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof UpdatePatientCommand
     */
    locations?: Array<UserLocationViewModel>;
}
/**
 *
 * @export
 * @interface UpdateServiceCommand
 */
export interface UpdateServiceCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateServiceCommand
     */
    specialtyTypeId?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceCommand
     */
    specialtyTypeName?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateServiceCommand
     */
    specialtyType?: string;
    /**
     *
     * @type {Procedure}
     * @memberof UpdateServiceCommand
     */
    procedure?: Procedure;
    /**
     *
     * @type {number}
     * @memberof UpdateServiceCommand
     */
    minPrice?: number;
    /**
     *
     * @type {number}
     * @memberof UpdateServiceCommand
     */
    maxPrice?: number;
    /**
     *
     * @type {boolean}
     * @memberof UpdateServiceCommand
     */
    priceReuqest?: boolean;
    /**
     *
     * @type {number}
     * @memberof UpdateServiceCommand
     */
    order?: number;
    /**
     *
     * @type {AuditableEntity}
     * @memberof UpdateServiceCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface UpdateServiceSequenceCommand
 */
export interface UpdateServiceSequenceCommand {
    /**
     *
     * @type {Array<string>}
     * @memberof UpdateServiceSequenceCommand
     */
    serviceSequence?: Array<string>;
}
/**
 *
 * @export
 * @interface UpdateSpecialtyCommand
 */
export interface UpdateSpecialtyCommand {
    /**
     *
     * @type {string}
     * @memberof UpdateSpecialtyCommand
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateSpecialtyCommand
     */
    description?: string;
    /**
     *
     * @type {string}
     * @memberof UpdateSpecialtyCommand
     */
    specialtyTypeName?: string;
    /**
     *
     * @type {AuditableEntity}
     * @memberof UpdateSpecialtyCommand
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface User
 */
export interface User {
    /**
     *
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    normalizedName?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof User
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof User
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof User
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {Array<Device>}
     * @memberof User
     */
    devices?: Array<Device>;
    /**
     *
     * @type {Array<Article>}
     * @memberof User
     */
    articles?: Array<Article>;
    /**
     *
     * @type {Array<Media>}
     * @memberof User
     */
    medias?: Array<Media>;
    /**
     *
     * @type {Array<UserLocation>}
     * @memberof User
     */
    locations?: Array<UserLocation>;
    /**
     *
     * @type {AuditableEntity}
     * @memberof User
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface UserItemViewModel
 */
export interface UserItemViewModel {
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UserItemViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UserItemViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UserItemViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof UserItemViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @interface UserLocation
 */
export interface UserLocation {
    /**
     *
     * @type {Point}
     * @memberof UserLocation
     */
    point?: Point;
    /**
     *
     * @type {string}
     * @memberof UserLocation
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocation
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocation
     */
    county?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocation
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocation
     */
    zipCode?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocation
     */
    address?: string;
    /**
     *
     * @type {UserLocationType}
     * @memberof UserLocation
     */
    locationType?: UserLocationType;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum UserLocationType {
    LivesIn = "LivesIn",
    BirthPlace = "BirthPlace"
}
/**
 *
 * @export
 * @interface UserLocationViewModel
 */
export interface UserLocationViewModel {
    /**
     *
     * @type {UserLocationType}
     * @memberof UserLocationViewModel
     */
    locationType?: UserLocationType;
    /**
     *
     * @type {number}
     * @memberof UserLocationViewModel
     */
    latitude?: number;
    /**
     *
     * @type {number}
     * @memberof UserLocationViewModel
     */
    longitude?: number;
    /**
     *
     * @type {string}
     * @memberof UserLocationViewModel
     */
    country?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocationViewModel
     */
    state?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocationViewModel
     */
    county?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocationViewModel
     */
    city?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocationViewModel
     */
    zipCode?: string;
    /**
     *
     * @type {string}
     * @memberof UserLocationViewModel
     */
    address?: string;
}
/**
 *
 * @export
 * @interface UserViewModel
 */
export interface UserViewModel {
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    userType?: string;
    /**
     *
     * @type {Array<UserLocationViewModel>}
     * @memberof UserViewModel
     */
    locations?: Array<UserLocationViewModel>;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    userName?: string;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    firstName?: string;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    lastName?: string;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    fullname?: string;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    phone?: string;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    email?: string;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    photo?: string;
    /**
     *
     * @type {string}
     * @memberof UserViewModel
     */
    photoThumbnail?: string;
    /**
     *
     * @type {Gender}
     * @memberof UserViewModel
     */
    gender?: Gender;
    /**
     *
     * @type {Date}
     * @memberof UserViewModel
     */
    dateOfBirth?: Date;
    /**
     *
     * @type {AuditableEntity}
     * @memberof UserViewModel
     */
    auditableEntity?: AuditableEntity;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare enum VendorType {
    Stripe = "Stripe",
    WeChat = "WeChat"
}
/**
 * AffiliationsApi - axios parameter creator
 * @export
 */
export declare const AffiliationsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/doctors/1
     * @summary Remove link between the doctor and the hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdDelete(hospitalId: string, doctorId: string, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/hospitals/1/doctors/1
     * @summary Link a doctor to a hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdPost(hospitalId: string, doctorId: string, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/managers/1
     * @summary Remove link between the manager and the hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdManagersManagerIdDelete(hospitalId: string, managerId: string, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/hospitals/1/managers/1
     * @summary Link a manager to a hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdManagersManagerIdPost(hospitalId: string, managerId: string, options?: any): RequestArgs;
};
/**
 * AffiliationsApi - functional programming interface
 * @export
 */
export declare const AffiliationsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/doctors/1
     * @summary Remove link between the doctor and the hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdDelete(hospitalId: string, doctorId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/doctors/1
     * @summary Link a doctor to a hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdPost(hospitalId: string, doctorId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DoctorAffiliationViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/managers/1
     * @summary Remove link between the manager and the hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdManagersManagerIdDelete(hospitalId: string, managerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/managers/1
     * @summary Link a manager to a hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdManagersManagerIdPost(hospitalId: string, managerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ManagerAffiliationViewModel>;
};
/**
 * AffiliationsApi - factory interface
 * @export
 */
export declare const AffiliationsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/doctors/1
     * @summary Remove link between the doctor and the hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdDelete(hospitalId: string, doctorId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/doctors/1
     * @summary Link a doctor to a hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdPost(hospitalId: string, doctorId: string, options?: any): AxiosPromise<DoctorAffiliationViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/managers/1
     * @summary Remove link between the manager and the hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdManagersManagerIdDelete(hospitalId: string, managerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/managers/1
     * @summary Link a manager to a hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdManagersManagerIdPost(hospitalId: string, managerId: string, options?: any): AxiosPromise<ManagerAffiliationViewModel>;
};
/**
 * AffiliationsApi - object-oriented interface
 * @export
 * @class AffiliationsApi
 * @extends {BaseAPI}
 */
export declare class AffiliationsApi extends BaseAPI {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/doctors/1
     * @summary Remove link between the doctor and the hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AffiliationsApi
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdDelete(hospitalId: string, doctorId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/doctors/1
     * @summary Link a doctor to a hospital.
     * @param {string} hospitalId
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AffiliationsApi
     */
    apiV1HospitalsHospitalIdDoctorsDoctorIdPost(hospitalId: string, doctorId: string, options?: any): AxiosPromise<DoctorAffiliationViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/managers/1
     * @summary Remove link between the manager and the hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AffiliationsApi
     */
    apiV1HospitalsHospitalIdManagersManagerIdDelete(hospitalId: string, managerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/managers/1
     * @summary Link a manager to a hospital.
     * @param {string} hospitalId
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AffiliationsApi
     */
    apiV1HospitalsHospitalIdManagersManagerIdPost(hospitalId: string, managerId: string, options?: any): AxiosPromise<ManagerAffiliationViewModel>;
}
/**
 * ArticlesApi - axios parameter creator
 * @export
 */
export declare const ArticlesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles
     * @summary Get all articles.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsArticlesGet(page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, searchString?: string | undefined, hospitalId?: string | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/articles/1
     * @summary Delete article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdDelete(hospitalId: string, articleId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles/1
     * @summary Get article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdGet(hospitalId: string, articleId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/articles/1      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"updated article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"articletag1\",              \"order\": 0            },            {              \"value\": \"articletag2\",              \"order\": 0            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Update article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {UpdateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdPut(hospitalId: string, articleId: string, body?: UpdateArticleCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/hospitals/1/articles      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"string\",              \"order\": 0              }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Create an article.
     * @param {string} hospitalId
     * @param {CreateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesPost(hospitalId: string, body?: CreateArticleCommand | undefined, options?: any): RequestArgs;
};
/**
 * ArticlesApi - functional programming interface
 * @export
 */
export declare const ArticlesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles
     * @summary Get all articles.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsArticlesGet(page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, searchString?: string | undefined, hospitalId?: string | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ArticlesViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/articles/1
     * @summary Delete article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdDelete(hospitalId: string, articleId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles/1
     * @summary Get article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdGet(hospitalId: string, articleId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ArticleViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/articles/1      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"updated article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"articletag1\",              \"order\": 0            },            {              \"value\": \"articletag2\",              \"order\": 0            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Update article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {UpdateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdPut(hospitalId: string, articleId: string, body?: UpdateArticleCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/articles      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"string\",              \"order\": 0              }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Create an article.
     * @param {string} hospitalId
     * @param {CreateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesPost(hospitalId: string, body?: CreateArticleCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * ArticlesApi - factory interface
 * @export
 */
export declare const ArticlesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles
     * @summary Get all articles.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsArticlesGet(page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, searchString?: string | undefined, hospitalId?: string | undefined, options?: any): AxiosPromise<ArticlesViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/articles/1
     * @summary Delete article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdDelete(hospitalId: string, articleId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles/1
     * @summary Get article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdGet(hospitalId: string, articleId: string, options?: any): AxiosPromise<ArticleViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/articles/1      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"updated article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"articletag1\",              \"order\": 0            },            {              \"value\": \"articletag2\",              \"order\": 0            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Update article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {UpdateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesArticleIdPut(hospitalId: string, articleId: string, body?: UpdateArticleCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/articles      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"string\",              \"order\": 0              }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Create an article.
     * @param {string} hospitalId
     * @param {CreateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdArticlesPost(hospitalId: string, body?: CreateArticleCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * ArticlesApi - object-oriented interface
 * @export
 * @class ArticlesApi
 * @extends {BaseAPI}
 */
export declare class ArticlesApi extends BaseAPI {
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles
     * @summary Get all articles.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    apiV1HospitalsArticlesGet(page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, searchString?: string, hospitalId?: string, options?: any): AxiosPromise<ArticlesViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/articles/1
     * @summary Delete article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    apiV1HospitalsHospitalIdArticlesArticleIdDelete(hospitalId: string, articleId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/articles/1
     * @summary Get article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    apiV1HospitalsHospitalIdArticlesArticleIdGet(hospitalId: string, articleId: string, options?: any): AxiosPromise<ArticleViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/articles/1      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"updated article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"articletag1\",              \"order\": 0            },            {              \"value\": \"articletag2\",              \"order\": 0            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Update article.
     * @param {string} hospitalId
     * @param {string} articleId
     * @param {UpdateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    apiV1HospitalsHospitalIdArticlesArticleIdPut(hospitalId: string, articleId: string, body?: UpdateArticleCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/articles      {          \"title\": \"Samsung Hospital Article\",          \"description\": \"This is an article.\",          \"body\": \"article body here\",          \"status\": \"Draft\",          \"hospitalId\": 1,          \"tags\": [            {              \"value\": \"string\",              \"order\": 0              }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"string\",              \"thumbnailUrl\": \"string\",              \"description\": \"string\",              \"order\": 0            }          ]      }
     * @summary Create an article.
     * @param {string} hospitalId
     * @param {CreateArticleCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    apiV1HospitalsHospitalIdArticlesPost(hospitalId: string, body?: CreateArticleCommand, options?: any): AxiosPromise<string>;
}
/**
 * BookingsApi - axios parameter creator
 * @export
 */
export declare const BookingsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/bookings/1
     * @summary Delete booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdDelete(bookingId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/bookings/1
     * @summary Get booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdGet(bookingId: string, options?: any): RequestArgs;
    /**
     * Smaple request:        PUT /api/v1/bookings/1      {          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Update booking.
     * @param {string} bookingId
     * @param {UpdateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdPut(bookingId: string, body?: UpdateBookingCommand | undefined, options?: any): RequestArgs;
    /**
     * Samaple request:        GET /api/v1/bookings
     * @summary Get all bookings.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {boolean} [isOpen]
     * @param {object} [bookingStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsGet(page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, searchString?: string | undefined, isOpen?: boolean | undefined, bookingStatus?: object | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/bookings      {          \"packageId\": 1,          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Create a booking.
     * @param {CreateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsPost(body?: CreateBookingCommand | undefined, options?: any): RequestArgs;
};
/**
 * BookingsApi - functional programming interface
 * @export
 */
export declare const BookingsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/bookings/1
     * @summary Delete booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdDelete(bookingId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/bookings/1
     * @summary Get booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdGet(bookingId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BookingViewModel>;
    /**
     * Smaple request:        PUT /api/v1/bookings/1      {          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Update booking.
     * @param {string} bookingId
     * @param {UpdateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdPut(bookingId: string, body?: UpdateBookingCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Samaple request:        GET /api/v1/bookings
     * @summary Get all bookings.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {boolean} [isOpen]
     * @param {object} [bookingStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsGet(page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, searchString?: string | undefined, isOpen?: boolean | undefined, bookingStatus?: object | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<BookingsViewModel>;
    /**
     * Sample request:        POST /api/v1/bookings      {          \"packageId\": 1,          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Create a booking.
     * @param {CreateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsPost(body?: CreateBookingCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * BookingsApi - factory interface
 * @export
 */
export declare const BookingsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/bookings/1
     * @summary Delete booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdDelete(bookingId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/bookings/1
     * @summary Get booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdGet(bookingId: string, options?: any): AxiosPromise<BookingViewModel>;
    /**
     * Smaple request:        PUT /api/v1/bookings/1      {          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Update booking.
     * @param {string} bookingId
     * @param {UpdateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsBookingIdPut(bookingId: string, body?: UpdateBookingCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Samaple request:        GET /api/v1/bookings
     * @summary Get all bookings.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {boolean} [isOpen]
     * @param {object} [bookingStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsGet(page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, searchString?: string | undefined, isOpen?: boolean | undefined, bookingStatus?: object | undefined, options?: any): AxiosPromise<BookingsViewModel>;
    /**
     * Sample request:        POST /api/v1/bookings      {          \"packageId\": 1,          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Create a booking.
     * @param {CreateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1BookingsPost(body?: CreateBookingCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * BookingsApi - object-oriented interface
 * @export
 * @class BookingsApi
 * @extends {BaseAPI}
 */
export declare class BookingsApi extends BaseAPI {
    /**
     * Sample request:        DELETE /api/v1/bookings/1
     * @summary Delete booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BookingsApi
     */
    apiV1BookingsBookingIdDelete(bookingId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/bookings/1
     * @summary Get booking.
     * @param {string} bookingId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BookingsApi
     */
    apiV1BookingsBookingIdGet(bookingId: string, options?: any): AxiosPromise<BookingViewModel>;
    /**
     * Smaple request:        PUT /api/v1/bookings/1      {          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Update booking.
     * @param {string} bookingId
     * @param {UpdateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BookingsApi
     */
    apiV1BookingsBookingIdPut(bookingId: string, body?: UpdateBookingCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Samaple request:        GET /api/v1/bookings
     * @summary Get all bookings.
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [searchString]
     * @param {boolean} [isOpen]
     * @param {object} [bookingStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BookingsApi
     */
    apiV1BookingsGet(page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, searchString?: string, isOpen?: boolean, bookingStatus?: object, options?: any): AxiosPromise<BookingsViewModel>;
    /**
     * Sample request:        POST /api/v1/bookings      {          \"packageId\": 1,          \"approximateDateStart\": \"2020-02-28T06:21:09.698Z\",          \"approximateDateEnd\": \"2020-02-28T06:21:09.698Z\"      }
     * @summary Create a booking.
     * @param {CreateBookingCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BookingsApi
     */
    apiV1BookingsPost(body?: CreateBookingCommand, options?: any): AxiosPromise<string>;
}
/**
 * CHAdminsApi - axios parameter creator
 * @export
 */
export declare const CHAdminsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/chadmins/1
     * @summary Delete cloud hospital admin user.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdDelete(chAdminId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/chadmins/1
     * @summary Get cloud hospital admin user by id.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdGet(chAdminId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/chadmins/1      {          \"email\": \"adminupdate@icloudhospital.com\",          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital admin user.
     * @param {string} chAdminId
     * @param {UpdateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdPut(chAdminId: string, body?: UpdateCHAdminCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/chadmin      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"admin\"      }
     * @summary Get cloud hospital admin users.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/chadmins      {          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Create cloud hospital admin user.
     * @param {CreateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsPost(body?: CreateCHAdminCommand | undefined, options?: any): RequestArgs;
};
/**
 * CHAdminsApi - functional programming interface
 * @export
 */
export declare const CHAdminsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/chadmins/1
     * @summary Delete cloud hospital admin user.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdDelete(chAdminId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chadmins/1
     * @summary Get cloud hospital admin user by id.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdGet(chAdminId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CHAdminViewModel>;
    /**
     * Sample request:        PUT /api/v1/chadmins/1      {          \"email\": \"adminupdate@icloudhospital.com\",          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital admin user.
     * @param {string} chAdminId
     * @param {UpdateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdPut(chAdminId: string, body?: UpdateCHAdminCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chadmin      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"admin\"      }
     * @summary Get cloud hospital admin users.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CHAdminsViewModel>;
    /**
     * Sample request:        POST /api/v1/chadmins      {          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Create cloud hospital admin user.
     * @param {CreateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsPost(body?: CreateCHAdminCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * CHAdminsApi - factory interface
 * @export
 */
export declare const CHAdminsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/chadmins/1
     * @summary Delete cloud hospital admin user.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdDelete(chAdminId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chadmins/1
     * @summary Get cloud hospital admin user by id.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdGet(chAdminId: string, options?: any): AxiosPromise<CHAdminViewModel>;
    /**
     * Sample request:        PUT /api/v1/chadmins/1      {          \"email\": \"adminupdate@icloudhospital.com\",          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital admin user.
     * @param {string} chAdminId
     * @param {UpdateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsChAdminIdPut(chAdminId: string, body?: UpdateCHAdminCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chadmin      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"admin\"      }
     * @summary Get cloud hospital admin users.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<CHAdminsViewModel>;
    /**
     * Sample request:        POST /api/v1/chadmins      {          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Create cloud hospital admin user.
     * @param {CreateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChadminsPost(body?: CreateCHAdminCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * CHAdminsApi - object-oriented interface
 * @export
 * @class CHAdminsApi
 * @extends {BaseAPI}
 */
export declare class CHAdminsApi extends BaseAPI {
    /**
     * Sample request:        DELETE /api/v1/chadmins/1
     * @summary Delete cloud hospital admin user.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHAdminsApi
     */
    apiV1ChadminsChAdminIdDelete(chAdminId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chadmins/1
     * @summary Get cloud hospital admin user by id.
     * @param {string} chAdminId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHAdminsApi
     */
    apiV1ChadminsChAdminIdGet(chAdminId: string, options?: any): AxiosPromise<CHAdminViewModel>;
    /**
     * Sample request:        PUT /api/v1/chadmins/1      {          \"email\": \"adminupdate@icloudhospital.com\",          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital admin user.
     * @param {string} chAdminId
     * @param {UpdateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHAdminsApi
     */
    apiV1ChadminsChAdminIdPut(chAdminId: string, body?: UpdateCHAdminCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chadmin      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"admin\"      }
     * @summary Get cloud hospital admin users.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHAdminsApi
     */
    apiV1ChadminsGet(id?: string, fullname?: string, email?: string, gender?: object, dateOfBirth?: Date, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<CHAdminsViewModel>;
    /**
     * Sample request:        POST /api/v1/chadmins      {          \"firstName\": \"Cloud\",          \"lastName\": \"Hospital\",          \"photo\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"photoThumbnail\": \"https://cloudhospitalblob.blob.core.windows.net/assets/Cloud_Hospital_Logo_blue.png\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T09:09:19.082Z\",          \"locations\": [              {                  \"locationType\": \"LivesIn\",                  \"latitude\": 0,                  \"longitude\": 0,                  \"country\": \"string\",                  \"state\": \"string\",                  \"county\": \"string\",                  \"city\": \"string\",                  \"zipCode\": \"string\",                  \"address\": \"string\"              }          ]      }
     * @summary Create cloud hospital admin user.
     * @param {CreateCHAdminCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHAdminsApi
     */
    apiV1ChadminsPost(body?: CreateCHAdminCommand, options?: any): AxiosPromise<string>;
}
/**
 * CHManagersApi - axios parameter creator
 * @export
 */
export declare const CHManagersApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Smaple request:        DELETE /api/v1/chmanagers/1
     * @summary Delete cloud hospital manager.
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdDelete(chManagerId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/chmanagers/1
     * @summary Get cloud hospital manager.
     * @param {string} managerId
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdGet(managerId: string, chManagerId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/chmanagers/1      {          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"locations\": [          {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital manager.
     * @param {string} chManagerId
     * @param {UpdateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdPut(chManagerId: string, body?: UpdateCHManagerCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/chmanagers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"chmanager\"      }
     * @summary Get cloud hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/chmanagers      {          \"userName\": \"chmanager\",          \"email\": \"chmanger@icloudhospital.com\",          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [             {             \"locationType\": \"LivesIn\",             \"latitude\": 0,             \"longitude\": 0,             \"country\": \"string\",             \"state\": \"string\",             \"county\": \"string\",             \"city\": \"string\",             \"zipCode\": \"string\",             \"address\": \"string\"             }          ]       }
     * @summary Create cloud hospital manager.
     * @param {CreateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersPost(body?: CreateCHManagerCommand | undefined, options?: any): RequestArgs;
};
/**
 * CHManagersApi - functional programming interface
 * @export
 */
export declare const CHManagersApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Smaple request:        DELETE /api/v1/chmanagers/1
     * @summary Delete cloud hospital manager.
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdDelete(chManagerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chmanagers/1
     * @summary Get cloud hospital manager.
     * @param {string} managerId
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdGet(managerId: string, chManagerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CHManagerViewModel>;
    /**
     * Sample request:        PUT /api/v1/chmanagers/1      {          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"locations\": [          {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital manager.
     * @param {string} chManagerId
     * @param {UpdateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdPut(chManagerId: string, body?: UpdateCHManagerCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chmanagers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"chmanager\"      }
     * @summary Get cloud hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CHManagersViewModel>;
    /**
     * Sample request:        POST /api/v1/chmanagers      {          \"userName\": \"chmanager\",          \"email\": \"chmanger@icloudhospital.com\",          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [             {             \"locationType\": \"LivesIn\",             \"latitude\": 0,             \"longitude\": 0,             \"country\": \"string\",             \"state\": \"string\",             \"county\": \"string\",             \"city\": \"string\",             \"zipCode\": \"string\",             \"address\": \"string\"             }          ]       }
     * @summary Create cloud hospital manager.
     * @param {CreateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersPost(body?: CreateCHManagerCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * CHManagersApi - factory interface
 * @export
 */
export declare const CHManagersApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Smaple request:        DELETE /api/v1/chmanagers/1
     * @summary Delete cloud hospital manager.
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdDelete(chManagerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chmanagers/1
     * @summary Get cloud hospital manager.
     * @param {string} managerId
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdGet(managerId: string, chManagerId: string, options?: any): AxiosPromise<CHManagerViewModel>;
    /**
     * Sample request:        PUT /api/v1/chmanagers/1      {          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"locations\": [          {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital manager.
     * @param {string} chManagerId
     * @param {UpdateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersChManagerIdPut(chManagerId: string, body?: UpdateCHManagerCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chmanagers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"chmanager\"      }
     * @summary Get cloud hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<CHManagersViewModel>;
    /**
     * Sample request:        POST /api/v1/chmanagers      {          \"userName\": \"chmanager\",          \"email\": \"chmanger@icloudhospital.com\",          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [             {             \"locationType\": \"LivesIn\",             \"latitude\": 0,             \"longitude\": 0,             \"country\": \"string\",             \"state\": \"string\",             \"county\": \"string\",             \"city\": \"string\",             \"zipCode\": \"string\",             \"address\": \"string\"             }          ]       }
     * @summary Create cloud hospital manager.
     * @param {CreateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ChmanagersPost(body?: CreateCHManagerCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * CHManagersApi - object-oriented interface
 * @export
 * @class CHManagersApi
 * @extends {BaseAPI}
 */
export declare class CHManagersApi extends BaseAPI {
    /**
     * Smaple request:        DELETE /api/v1/chmanagers/1
     * @summary Delete cloud hospital manager.
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHManagersApi
     */
    apiV1ChmanagersChManagerIdDelete(chManagerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chmanagers/1
     * @summary Get cloud hospital manager.
     * @param {string} managerId
     * @param {string} chManagerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHManagersApi
     */
    apiV1ChmanagersChManagerIdGet(managerId: string, chManagerId: string, options?: any): AxiosPromise<CHManagerViewModel>;
    /**
     * Sample request:        PUT /api/v1/chmanagers/1      {          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"locations\": [          {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"              }          ]      }
     * @summary Update cloud hospital manager.
     * @param {string} chManagerId
     * @param {UpdateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHManagersApi
     */
    apiV1ChmanagersChManagerIdPut(chManagerId: string, body?: UpdateCHManagerCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/chmanagers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"chmanager\"      }
     * @summary Get cloud hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHManagersApi
     */
    apiV1ChmanagersGet(id?: string, fullname?: string, email?: string, gender?: object, dateOfBirth?: Date, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<CHManagersViewModel>;
    /**
     * Sample request:        POST /api/v1/chmanagers      {          \"userName\": \"chmanager\",          \"email\": \"chmanger@icloudhospital.com\",          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [             {             \"locationType\": \"LivesIn\",             \"latitude\": 0,             \"longitude\": 0,             \"country\": \"string\",             \"state\": \"string\",             \"county\": \"string\",             \"city\": \"string\",             \"zipCode\": \"string\",             \"address\": \"string\"             }          ]       }
     * @summary Create cloud hospital manager.
     * @param {CreateCHManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CHManagersApi
     */
    apiV1ChmanagersPost(body?: CreateCHManagerCommand, options?: any): AxiosPromise<string>;
}
/**
 * CountriesApi - axios parameter creator
 * @export
 */
export declare const CountriesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/countries/1
     * @summary Delete country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdDelete(countryId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/countries/1
     * @summary Get country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdGet(countryId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/countries/1      {          \"name\": \"USA\",          \"description\": \"United States of America\"          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\"              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": 1,              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],      }
     * @summary Update country.
     * @param {string} countryId
     * @param {UpdateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdPut(countryId: string, body?: UpdateCountryCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/countries      {          \"countryPageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          }      }
     * @summary Get all countries.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {Date} [createdDate]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, createdDate?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/countries      {          \"name\": \"Korea\",          \"description\": \"Republic of Korea\",          \"medias\": [              {                  \"mediaType\": \"Photo\",                  \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",                  \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\",                  \"description\": \"string\"              }          ]      }
     * @summary Create a country.
     * @param {CreateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesPost(body?: CreateCountryCommand | undefined, options?: any): RequestArgs;
};
/**
 * CountriesApi - functional programming interface
 * @export
 */
export declare const CountriesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/countries/1
     * @summary Delete country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdDelete(countryId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/countries/1
     * @summary Get country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdGet(countryId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CountryViewModel>;
    /**
     * Sample request:        PUT /api/v1/countries/1      {          \"name\": \"USA\",          \"description\": \"United States of America\"          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\"              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": 1,              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],      }
     * @summary Update country.
     * @param {string} countryId
     * @param {UpdateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdPut(countryId: string, body?: UpdateCountryCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/countries      {          \"countryPageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          }      }
     * @summary Get all countries.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {Date} [createdDate]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, createdDate?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<CountriesViewModel>;
    /**
     * Sample request:        POST /api/v1/countries      {          \"name\": \"Korea\",          \"description\": \"Republic of Korea\",          \"medias\": [              {                  \"mediaType\": \"Photo\",                  \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",                  \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\",                  \"description\": \"string\"              }          ]      }
     * @summary Create a country.
     * @param {CreateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesPost(body?: CreateCountryCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * CountriesApi - factory interface
 * @export
 */
export declare const CountriesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/countries/1
     * @summary Delete country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdDelete(countryId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/countries/1
     * @summary Get country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdGet(countryId: string, options?: any): AxiosPromise<CountryViewModel>;
    /**
     * Sample request:        PUT /api/v1/countries/1      {          \"name\": \"USA\",          \"description\": \"United States of America\"          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\"              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": 1,              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],      }
     * @summary Update country.
     * @param {string} countryId
     * @param {UpdateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesCountryIdPut(countryId: string, body?: UpdateCountryCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/countries      {          \"countryPageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          }      }
     * @summary Get all countries.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {Date} [createdDate]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, createdDate?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<CountriesViewModel>;
    /**
     * Sample request:        POST /api/v1/countries      {          \"name\": \"Korea\",          \"description\": \"Republic of Korea\",          \"medias\": [              {                  \"mediaType\": \"Photo\",                  \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",                  \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\",                  \"description\": \"string\"              }          ]      }
     * @summary Create a country.
     * @param {CreateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1CountriesPost(body?: CreateCountryCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * CountriesApi - object-oriented interface
 * @export
 * @class CountriesApi
 * @extends {BaseAPI}
 */
export declare class CountriesApi extends BaseAPI {
    /**
     * Sample request:        DELETE /api/v1/countries/1
     * @summary Delete country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    apiV1CountriesCountryIdDelete(countryId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/countries/1
     * @summary Get country.
     * @param {string} countryId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    apiV1CountriesCountryIdGet(countryId: string, options?: any): AxiosPromise<CountryViewModel>;
    /**
     * Sample request:        PUT /api/v1/countries/1      {          \"name\": \"USA\",          \"description\": \"United States of America\"          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\"              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": 1,              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],      }
     * @summary Update country.
     * @param {string} countryId
     * @param {UpdateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    apiV1CountriesCountryIdPut(countryId: string, body?: UpdateCountryCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/countries      {          \"countryPageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          }      }
     * @summary Get all countries.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {Date} [createdDate]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    apiV1CountriesGet(id?: string, name?: string, description?: string, createdDate?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<CountriesViewModel>;
    /**
     * Sample request:        POST /api/v1/countries      {          \"name\": \"Korea\",          \"description\": \"Republic of Korea\",          \"medias\": [              {                  \"mediaType\": \"Photo\",                  \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SouthKorea.png\",                  \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SouthKorea.png\",                  \"description\": \"string\"              }          ]      }
     * @summary Create a country.
     * @param {CreateCountryCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CountriesApi
     */
    apiV1CountriesPost(body?: CreateCountryCommand, options?: any): AxiosPromise<string>;
}
/**
 * DoctorsApi - axios parameter creator
 * @export
 */
export declare const DoctorsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/doctors/1
     * @summary Delete doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdDelete(doctorId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/doctors/1
     * @summary Get hospital doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdGet(doctorId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/doctors/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital doctor.
     * @param {string} doctorId
     * @param {UpdateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdPut(doctorId: string, body?: UpdateDoctorCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/doctors      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"doctor\"
     * @summary Get all hospital doctors.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, hospitalId?: string | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/doctors      {          \"userName\": \"cloudDoctor\",          \"email\": \"doctor@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"doctor\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T17:57:32.048Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital doctor.
     * @param {CreateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsPost(body?: CreateDoctorCommand | undefined, options?: any): RequestArgs;
};
/**
 * DoctorsApi - functional programming interface
 * @export
 */
export declare const DoctorsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/doctors/1
     * @summary Delete doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdDelete(doctorId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/doctors/1
     * @summary Get hospital doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdGet(doctorId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DoctorViewModel>;
    /**
     * Sample request:        PUT /api/v1/doctors/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital doctor.
     * @param {string} doctorId
     * @param {UpdateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdPut(doctorId: string, body?: UpdateDoctorCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/doctors      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"doctor\"
     * @summary Get all hospital doctors.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, hospitalId?: string | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<DoctorsViewModel>;
    /**
     * Sample request:        POST /api/v1/doctors      {          \"userName\": \"cloudDoctor\",          \"email\": \"doctor@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"doctor\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T17:57:32.048Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital doctor.
     * @param {CreateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsPost(body?: CreateDoctorCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * DoctorsApi - factory interface
 * @export
 */
export declare const DoctorsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/doctors/1
     * @summary Delete doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdDelete(doctorId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/doctors/1
     * @summary Get hospital doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdGet(doctorId: string, options?: any): AxiosPromise<DoctorViewModel>;
    /**
     * Sample request:        PUT /api/v1/doctors/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital doctor.
     * @param {string} doctorId
     * @param {UpdateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsDoctorIdPut(doctorId: string, body?: UpdateDoctorCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/doctors      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"doctor\"
     * @summary Get all hospital doctors.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, hospitalId?: string | undefined, options?: any): AxiosPromise<DoctorsViewModel>;
    /**
     * Sample request:        POST /api/v1/doctors      {          \"userName\": \"cloudDoctor\",          \"email\": \"doctor@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"doctor\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T17:57:32.048Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital doctor.
     * @param {CreateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1DoctorsPost(body?: CreateDoctorCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * DoctorsApi - object-oriented interface
 * @export
 * @class DoctorsApi
 * @extends {BaseAPI}
 */
export declare class DoctorsApi extends BaseAPI {
    /**
     * Sample request:        DELETE /api/v1/doctors/1
     * @summary Delete doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DoctorsApi
     */
    apiV1DoctorsDoctorIdDelete(doctorId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/doctors/1
     * @summary Get hospital doctor.
     * @param {string} doctorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DoctorsApi
     */
    apiV1DoctorsDoctorIdGet(doctorId: string, options?: any): AxiosPromise<DoctorViewModel>;
    /**
     * Sample request:        PUT /api/v1/doctors/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital doctor.
     * @param {string} doctorId
     * @param {UpdateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DoctorsApi
     */
    apiV1DoctorsDoctorIdPut(doctorId: string, body?: UpdateDoctorCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/doctors      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"doctor\"
     * @summary Get all hospital doctors.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DoctorsApi
     */
    apiV1DoctorsGet(id?: string, fullname?: string, email?: string, gender?: object, dateOfBirth?: Date, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, hospitalId?: string, options?: any): AxiosPromise<DoctorsViewModel>;
    /**
     * Sample request:        POST /api/v1/doctors      {          \"userName\": \"cloudDoctor\",          \"email\": \"doctor@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"doctor\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T17:57:32.048Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital doctor.
     * @param {CreateDoctorCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DoctorsApi
     */
    apiV1DoctorsPost(body?: CreateDoctorCommand, options?: any): AxiosPromise<string>;
}
/**
 * EquipmentsApi - axios parameter creator
 * @export
 */
export declare const EquipmentsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Medical\"      }
     * @summary Get all equipments.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsEquipmentsGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, hospitalId?: string | undefined, hospitalName?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/equipments/1
     * @summary Delete equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdDelete(hospitalId: string, equipmentId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments/1
     * @summary Get equipment.
     * @param {number} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdGet(hospitalId: number, equipmentId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/equipments/1      {          \"description\": \"Upgraded medical equipment\"      }
     * @summary Update equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {UpdateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdPut(hospitalId: string, equipmentId: string, body?: UpdateEquipmentCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/hospitals/1/equipments      {          \"name\": \"Afroasia ltd\",          \"description\": \"Medical equipment\",          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"imageurl\",              \"description\": \"string\",                      \"order\": 0            }          ]      }
     * @summary Create an equipment and add to a hospital.
     * @param {string} hospitalId
     * @param {CreateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsPost(hospitalId: string, body?: CreateEquipmentCommand | undefined, options?: any): RequestArgs;
};
/**
 * EquipmentsApi - functional programming interface
 * @export
 */
export declare const EquipmentsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Medical\"      }
     * @summary Get all equipments.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsEquipmentsGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, hospitalId?: string | undefined, hospitalName?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<EquipmentsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/equipments/1
     * @summary Delete equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdDelete(hospitalId: string, equipmentId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments/1
     * @summary Get equipment.
     * @param {number} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdGet(hospitalId: number, equipmentId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<EquipmentViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/equipments/1      {          \"description\": \"Upgraded medical equipment\"      }
     * @summary Update equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {UpdateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdPut(hospitalId: string, equipmentId: string, body?: UpdateEquipmentCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/equipments      {          \"name\": \"Afroasia ltd\",          \"description\": \"Medical equipment\",          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"imageurl\",              \"description\": \"string\",                      \"order\": 0            }          ]      }
     * @summary Create an equipment and add to a hospital.
     * @param {string} hospitalId
     * @param {CreateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsPost(hospitalId: string, body?: CreateEquipmentCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * EquipmentsApi - factory interface
 * @export
 */
export declare const EquipmentsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Medical\"      }
     * @summary Get all equipments.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsEquipmentsGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, hospitalId?: string | undefined, hospitalName?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<EquipmentsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/equipments/1
     * @summary Delete equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdDelete(hospitalId: string, equipmentId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments/1
     * @summary Get equipment.
     * @param {number} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdGet(hospitalId: number, equipmentId: string, options?: any): AxiosPromise<EquipmentViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/equipments/1      {          \"description\": \"Upgraded medical equipment\"      }
     * @summary Update equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {UpdateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdPut(hospitalId: string, equipmentId: string, body?: UpdateEquipmentCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/equipments      {          \"name\": \"Afroasia ltd\",          \"description\": \"Medical equipment\",          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"imageurl\",              \"description\": \"string\",                      \"order\": 0            }          ]      }
     * @summary Create an equipment and add to a hospital.
     * @param {string} hospitalId
     * @param {CreateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdEquipmentsPost(hospitalId: string, body?: CreateEquipmentCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * EquipmentsApi - object-oriented interface
 * @export
 * @class EquipmentsApi
 * @extends {BaseAPI}
 */
export declare class EquipmentsApi extends BaseAPI {
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Medical\"      }
     * @summary Get all equipments.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EquipmentsApi
     */
    apiV1HospitalsEquipmentsGet(id?: string, name?: string, description?: string, hospitalId?: string, hospitalName?: string, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<EquipmentsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/equipments/1
     * @summary Delete equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EquipmentsApi
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdDelete(hospitalId: string, equipmentId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/equipments/1
     * @summary Get equipment.
     * @param {number} hospitalId
     * @param {string} equipmentId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EquipmentsApi
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdGet(hospitalId: number, equipmentId: string, options?: any): AxiosPromise<EquipmentViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/equipments/1      {          \"description\": \"Upgraded medical equipment\"      }
     * @summary Update equipment.
     * @param {string} hospitalId
     * @param {string} equipmentId
     * @param {UpdateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EquipmentsApi
     */
    apiV1HospitalsHospitalIdEquipmentsEquipmentIdPut(hospitalId: string, equipmentId: string, body?: UpdateEquipmentCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/equipments      {          \"name\": \"Afroasia ltd\",          \"description\": \"Medical equipment\",          \"medias\": [            {              \"mediaType\": 0,              \"url\": \"imageurl\",              \"description\": \"string\",                      \"order\": 0            }          ]      }
     * @summary Create an equipment and add to a hospital.
     * @param {string} hospitalId
     * @param {CreateEquipmentCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EquipmentsApi
     */
    apiV1HospitalsHospitalIdEquipmentsPost(hospitalId: string, body?: CreateEquipmentCommand, options?: any): AxiosPromise<string>;
}
/**
 * HospitalSpecialtiesApi - axios parameter creator
 * @export
 */
export declare const HospitalSpecialtiesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1
     * @summary Delete hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdDelete(hospitalId: string, specialtyId: string, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1
     * @summary Create hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdPost(hospitalId: string, specialtyId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialtysequence      {          \"specialtyType\": \"Endocrinology\",          \"hospitalSpecialtySequence\": [14, 30, 5, 7]      }
     * @summary Update hospitalSpecialty sequence.
     * @param {string} hospitalId
     * @param {string} specialtyTypeId
     * @param {UpdateHospitalSpecialtySequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtysequencePut(hospitalId: string, specialtyTypeId: string, body?: UpdateHospitalSpecialtySequenceCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/hospitals/specialties
     * @summary Get all hospitalSpecialties.
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {string} [specialtyId]
     * @param {string} [specialtyName]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsSpecialtiesGet(hospitalId?: string | undefined, hospitalName?: string | undefined, specialtyId?: string | undefined, specialtyName?: string | undefined, specialtyTypeId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
};
/**
 * HospitalSpecialtiesApi - functional programming interface
 * @export
 */
export declare const HospitalSpecialtiesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1
     * @summary Delete hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdDelete(hospitalId: string, specialtyId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1
     * @summary Create hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdPost(hospitalId: string, specialtyId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<HospitalSpecialtyViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialtysequence      {          \"specialtyType\": \"Endocrinology\",          \"hospitalSpecialtySequence\": [14, 30, 5, 7]      }
     * @summary Update hospitalSpecialty sequence.
     * @param {string} hospitalId
     * @param {string} specialtyTypeId
     * @param {UpdateHospitalSpecialtySequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtysequencePut(hospitalId: string, specialtyTypeId: string, body?: UpdateHospitalSpecialtySequenceCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/specialties
     * @summary Get all hospitalSpecialties.
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {string} [specialtyId]
     * @param {string} [specialtyName]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsSpecialtiesGet(hospitalId?: string | undefined, hospitalName?: string | undefined, specialtyId?: string | undefined, specialtyName?: string | undefined, specialtyTypeId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<HospitalSpecialtiesViewModel>;
};
/**
 * HospitalSpecialtiesApi - factory interface
 * @export
 */
export declare const HospitalSpecialtiesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1
     * @summary Delete hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdDelete(hospitalId: string, specialtyId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1
     * @summary Create hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdPost(hospitalId: string, specialtyId: string, options?: any): AxiosPromise<HospitalSpecialtyViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialtysequence      {          \"specialtyType\": \"Endocrinology\",          \"hospitalSpecialtySequence\": [14, 30, 5, 7]      }
     * @summary Update hospitalSpecialty sequence.
     * @param {string} hospitalId
     * @param {string} specialtyTypeId
     * @param {UpdateHospitalSpecialtySequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtysequencePut(hospitalId: string, specialtyTypeId: string, body?: UpdateHospitalSpecialtySequenceCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/specialties
     * @summary Get all hospitalSpecialties.
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {string} [specialtyId]
     * @param {string} [specialtyName]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsSpecialtiesGet(hospitalId?: string | undefined, hospitalName?: string | undefined, specialtyId?: string | undefined, specialtyName?: string | undefined, specialtyTypeId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<HospitalSpecialtiesViewModel>;
};
/**
 * HospitalSpecialtiesApi - object-oriented interface
 * @export
 * @class HospitalSpecialtiesApi
 * @extends {BaseAPI}
 */
export declare class HospitalSpecialtiesApi extends BaseAPI {
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1
     * @summary Delete hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalSpecialtiesApi
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdDelete(hospitalId: string, specialtyId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1
     * @summary Create hospitalSpecialty.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalSpecialtiesApi
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdPost(hospitalId: string, specialtyId: string, options?: any): AxiosPromise<HospitalSpecialtyViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialtysequence      {          \"specialtyType\": \"Endocrinology\",          \"hospitalSpecialtySequence\": [14, 30, 5, 7]      }
     * @summary Update hospitalSpecialty sequence.
     * @param {string} hospitalId
     * @param {string} specialtyTypeId
     * @param {UpdateHospitalSpecialtySequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalSpecialtiesApi
     */
    apiV1HospitalsHospitalIdSpecialtysequencePut(hospitalId: string, specialtyTypeId: string, body?: UpdateHospitalSpecialtySequenceCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/specialties
     * @summary Get all hospitalSpecialties.
     * @param {string} [hospitalId]
     * @param {string} [hospitalName]
     * @param {string} [specialtyId]
     * @param {string} [specialtyName]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalSpecialtiesApi
     */
    apiV1HospitalsSpecialtiesGet(hospitalId?: string, hospitalName?: string, specialtyId?: string, specialtyName?: string, specialtyTypeId?: string, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<HospitalSpecialtiesViewModel>;
}
/**
 * HospitalsApi - axios parameter creator
 * @export
 */
export declare const HospitalsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Samsung\"      }
     * @summary Get all hospitals.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [countryId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, countryId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1
     * @summary Delete hospital.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDelete(hospitalId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/hospitals/1
     * @summary Get hospita.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdGet(hospitalId: string, options?: any): RequestArgs;
    /**
     * Sameple request:        PUT /api/v1/hospitals      {          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 2436,          \"operationRoomsCount\": 44,          \"icuBedsCount\": 122,          \"departmentsCount\": 200,          \"medicalStaffCount\": 1200,      }
     * @summary Update hospital.
     * @param {string} hospitalId
     * @param {UpdateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdPut(hospitalId: string, body?: UpdateHospitalCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/hospitals      {          \"name\": \"Samsung Medical Center\",          \"description\": \"Comprehensive Cancer Center in Seoul, South Korea is nationally ranked in 1 adult specialty.\",          \"logo\": \"http://www.samsunghospital.com/home/main/index.do\",          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 1436,          \"operationRoomsCount\": 34,          \"icuBedsCount\": 12,          \"departmentsCount\": 20,          \"medicalStaffCount\": 600,          \"countryId\": 1,          \"awards\": [            {              \"name\": \"Award1\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            },            {              \"name\": \"Award2\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SamsungMedicalCenter.jpg\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SamsungMedicalCenter.jpg\",              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": \"Video\",              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],          \"location\": {            \"latitude\": 37.4881568,            \"longitude\": 127.0855952,            \"country\": \"Korea\",            \"state\": \"string\",            \"county\": \"Gangnamgu\",            \"city\": \"Seoul\",            \"zipCode\": \"12345\",            \"address\": \"Il-won ro 81\"          }      }
     * @summary Create a hospital.
     * @param {CreateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsPost(body?: CreateHospitalCommand | undefined, options?: any): RequestArgs;
};
/**
 * HospitalsApi - functional programming interface
 * @export
 */
export declare const HospitalsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Samsung\"      }
     * @summary Get all hospitals.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [countryId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, countryId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<HospitalsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1
     * @summary Delete hospital.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDelete(hospitalId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1
     * @summary Get hospita.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdGet(hospitalId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<HospitalViewModel>;
    /**
     * Sameple request:        PUT /api/v1/hospitals      {          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 2436,          \"operationRoomsCount\": 44,          \"icuBedsCount\": 122,          \"departmentsCount\": 200,          \"medicalStaffCount\": 1200,      }
     * @summary Update hospital.
     * @param {string} hospitalId
     * @param {UpdateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdPut(hospitalId: string, body?: UpdateHospitalCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals      {          \"name\": \"Samsung Medical Center\",          \"description\": \"Comprehensive Cancer Center in Seoul, South Korea is nationally ranked in 1 adult specialty.\",          \"logo\": \"http://www.samsunghospital.com/home/main/index.do\",          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 1436,          \"operationRoomsCount\": 34,          \"icuBedsCount\": 12,          \"departmentsCount\": 20,          \"medicalStaffCount\": 600,          \"countryId\": 1,          \"awards\": [            {              \"name\": \"Award1\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            },            {              \"name\": \"Award2\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SamsungMedicalCenter.jpg\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SamsungMedicalCenter.jpg\",              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": \"Video\",              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],          \"location\": {            \"latitude\": 37.4881568,            \"longitude\": 127.0855952,            \"country\": \"Korea\",            \"state\": \"string\",            \"county\": \"Gangnamgu\",            \"city\": \"Seoul\",            \"zipCode\": \"12345\",            \"address\": \"Il-won ro 81\"          }      }
     * @summary Create a hospital.
     * @param {CreateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsPost(body?: CreateHospitalCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * HospitalsApi - factory interface
 * @export
 */
export declare const HospitalsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        GET /api/v1/hospitals      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Samsung\"      }
     * @summary Get all hospitals.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [countryId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, countryId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<HospitalsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1
     * @summary Delete hospital.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdDelete(hospitalId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1
     * @summary Get hospita.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdGet(hospitalId: string, options?: any): AxiosPromise<HospitalViewModel>;
    /**
     * Sameple request:        PUT /api/v1/hospitals      {          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 2436,          \"operationRoomsCount\": 44,          \"icuBedsCount\": 122,          \"departmentsCount\": 200,          \"medicalStaffCount\": 1200,      }
     * @summary Update hospital.
     * @param {string} hospitalId
     * @param {UpdateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdPut(hospitalId: string, body?: UpdateHospitalCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals      {          \"name\": \"Samsung Medical Center\",          \"description\": \"Comprehensive Cancer Center in Seoul, South Korea is nationally ranked in 1 adult specialty.\",          \"logo\": \"http://www.samsunghospital.com/home/main/index.do\",          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 1436,          \"operationRoomsCount\": 34,          \"icuBedsCount\": 12,          \"departmentsCount\": 20,          \"medicalStaffCount\": 600,          \"countryId\": 1,          \"awards\": [            {              \"name\": \"Award1\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            },            {              \"name\": \"Award2\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SamsungMedicalCenter.jpg\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SamsungMedicalCenter.jpg\",              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": \"Video\",              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],          \"location\": {            \"latitude\": 37.4881568,            \"longitude\": 127.0855952,            \"country\": \"Korea\",            \"state\": \"string\",            \"county\": \"Gangnamgu\",            \"city\": \"Seoul\",            \"zipCode\": \"12345\",            \"address\": \"Il-won ro 81\"          }      }
     * @summary Create a hospital.
     * @param {CreateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsPost(body?: CreateHospitalCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * HospitalsApi - object-oriented interface
 * @export
 * @class HospitalsApi
 * @extends {BaseAPI}
 */
export declare class HospitalsApi extends BaseAPI {
    /**
     * Sample request:        GET /api/v1/hospitals      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"Samsung\"      }
     * @summary Get all hospitals.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [countryId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalsApi
     */
    apiV1HospitalsGet(id?: string, name?: string, description?: string, countryId?: string, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<HospitalsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1
     * @summary Delete hospital.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalsApi
     */
    apiV1HospitalsHospitalIdDelete(hospitalId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1
     * @summary Get hospita.
     * @param {string} hospitalId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalsApi
     */
    apiV1HospitalsHospitalIdGet(hospitalId: string, options?: any): AxiosPromise<HospitalViewModel>;
    /**
     * Sameple request:        PUT /api/v1/hospitals      {          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 2436,          \"operationRoomsCount\": 44,          \"icuBedsCount\": 122,          \"departmentsCount\": 200,          \"medicalStaffCount\": 1200,      }
     * @summary Update hospital.
     * @param {string} hospitalId
     * @param {UpdateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalsApi
     */
    apiV1HospitalsHospitalIdPut(hospitalId: string, body?: UpdateHospitalCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/hospitals      {          \"name\": \"Samsung Medical Center\",          \"description\": \"Comprehensive Cancer Center in Seoul, South Korea is nationally ranked in 1 adult specialty.\",          \"logo\": \"http://www.samsunghospital.com/home/main/index.do\",          \"overview\": \"Overview of Samsung Medical Center\",          \"bedsCount\": 1436,          \"operationRoomsCount\": 34,          \"icuBedsCount\": 12,          \"departmentsCount\": 20,          \"medicalStaffCount\": 600,          \"countryId\": 1,          \"awards\": [            {              \"name\": \"Award1\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            },            {              \"name\": \"Award2\",              \"image\": \"string\",              \"date\": \"2020-02-05T09:29:19.240Z\"            }          ],          \"medias\": [            {              \"mediaType\": \"Photo\",              \"url\": \"https://cloudhospitalblob.blob.core.windows.net/imagecontainer/SamsungMedicalCenter.jpg\",              \"thumbnailUrl\": \"https://cloudhospitalblob.blob.core.windows.net/thumbnailcontainer/SamsungMedicalCenter.jpg\",              \"description\": \"string\",              \"order\": 0            },            {              \"mediaType\": \"Video\",              \"url\": \"string\",              \"description\": \"string\",              \"order\": 1            }          ],          \"location\": {            \"latitude\": 37.4881568,            \"longitude\": 127.0855952,            \"country\": \"Korea\",            \"state\": \"string\",            \"county\": \"Gangnamgu\",            \"city\": \"Seoul\",            \"zipCode\": \"12345\",            \"address\": \"Il-won ro 81\"          }      }
     * @summary Create a hospital.
     * @param {CreateHospitalCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof HospitalsApi
     */
    apiV1HospitalsPost(body?: CreateHospitalCommand, options?: any): AxiosPromise<string>;
}
/**
 * IdentityApi - axios parameter creator
 * @export
 */
export declare const IdentityApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Smaple request:        GET /api/v1/identity
     * @summary Get current user\'s Identity claims.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1IdentityGet(options?: any): RequestArgs;
};
/**
 * IdentityApi - functional programming interface
 * @export
 */
export declare const IdentityApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Smaple request:        GET /api/v1/identity
     * @summary Get current user\'s Identity claims.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1IdentityGet(options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>;
};
/**
 * IdentityApi - factory interface
 * @export
 */
export declare const IdentityApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Smaple request:        GET /api/v1/identity
     * @summary Get current user\'s Identity claims.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1IdentityGet(options?: any): AxiosPromise<void>;
};
/**
 * IdentityApi - object-oriented interface
 * @export
 * @class IdentityApi
 * @extends {BaseAPI}
 */
export declare class IdentityApi extends BaseAPI {
    /**
     * Smaple request:        GET /api/v1/identity
     * @summary Get current user\'s Identity claims.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IdentityApi
     */
    apiV1IdentityGet(options?: any): AxiosPromise<void>;
}
/**
 * ImagesApi - axios parameter creator
 * @export
 */
export declare const ImagesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ImagesPost(options?: any): RequestArgs;
};
/**
 * ImagesApi - functional programming interface
 * @export
 */
export declare const ImagesApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ImagesPost(options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>;
};
/**
 * ImagesApi - factory interface
 * @export
 */
export declare const ImagesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ImagesPost(options?: any): AxiosPromise<void>;
};
/**
 * ImagesApi - object-oriented interface
 * @export
 * @class ImagesApi
 * @extends {BaseAPI}
 */
export declare class ImagesApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImagesApi
     */
    apiV1ImagesPost(options?: any): AxiosPromise<void>;
}
/**
 * ManagersApi - axios parameter creator
 * @export
 */
export declare const ManagersApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/managers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"manager\"      }
     * @summary Get all hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, hospitalId?: string | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/managers/1
     * @summary Delete hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdDelete(managerId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/managers/1
     * @summary Get hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdGet(managerId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/managers/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital manager.
     * @param {string} managerId
     * @param {UpdateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdPut(managerId: string, body?: UpdateManagerCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/managers      {          \"userName\": \"manager\",          \"email\": \"manger@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital manager.
     * @param {CreateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersPost(body?: CreateManagerCommand | undefined, options?: any): RequestArgs;
};
/**
 * ManagersApi - functional programming interface
 * @export
 */
export declare const ManagersApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/managers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"manager\"      }
     * @summary Get all hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, hospitalId?: string | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ManagersViewModel>;
    /**
     * Sample request:        DELETE /api/v1/managers/1
     * @summary Delete hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdDelete(managerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/managers/1
     * @summary Get hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdGet(managerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ManagerViewModel>;
    /**
     * Sample request:        PUT /api/v1/managers/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital manager.
     * @param {string} managerId
     * @param {UpdateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdPut(managerId: string, body?: UpdateManagerCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/managers      {          \"userName\": \"manager\",          \"email\": \"manger@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital manager.
     * @param {CreateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersPost(body?: CreateManagerCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * ManagersApi - factory interface
 * @export
 */
export declare const ManagersApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        GET /api/v1/managers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"manager\"      }
     * @summary Get all hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, hospitalId?: string | undefined, options?: any): AxiosPromise<ManagersViewModel>;
    /**
     * Sample request:        DELETE /api/v1/managers/1
     * @summary Delete hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdDelete(managerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/managers/1
     * @summary Get hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdGet(managerId: string, options?: any): AxiosPromise<ManagerViewModel>;
    /**
     * Sample request:        PUT /api/v1/managers/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital manager.
     * @param {string} managerId
     * @param {UpdateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersManagerIdPut(managerId: string, body?: UpdateManagerCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/managers      {          \"userName\": \"manager\",          \"email\": \"manger@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital manager.
     * @param {CreateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ManagersPost(body?: CreateManagerCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * ManagersApi - object-oriented interface
 * @export
 * @class ManagersApi
 * @extends {BaseAPI}
 */
export declare class ManagersApi extends BaseAPI {
    /**
     * Sample request:        GET /api/v1/managers      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"manager\"      }
     * @summary Get all hospital managers.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {string} [hospitalId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManagersApi
     */
    apiV1ManagersGet(id?: string, fullname?: string, email?: string, gender?: object, dateOfBirth?: Date, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, hospitalId?: string, options?: any): AxiosPromise<ManagersViewModel>;
    /**
     * Sample request:        DELETE /api/v1/managers/1
     * @summary Delete hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManagersApi
     */
    apiV1ManagersManagerIdDelete(managerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/managers/1
     * @summary Get hospital manager.
     * @param {string} managerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManagersApi
     */
    apiV1ManagersManagerIdGet(managerId: string, options?: any): AxiosPromise<ManagerViewModel>;
    /**
     * Sample request:        PUT /api/v1/managers/1      {          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update hospital manager.
     * @param {string} managerId
     * @param {UpdateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManagersApi
     */
    apiV1ManagersManagerIdPut(managerId: string, body?: UpdateManagerCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/managers      {          \"userName\": \"manager\",          \"email\": \"manger@icloudhospital.com\",          \"hospitalId\": 1,          \"firstName\": \"cloud\",          \"lastName\": \"manager\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T15:28:09.897Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create hospital manager.
     * @param {CreateManagerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManagersApi
     */
    apiV1ManagersPost(body?: CreateManagerCommand, options?: any): AxiosPromise<string>;
}
/**
 * MoviesApi - axios parameter creator
 * @export
 */
export declare const MoviesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MoviesPost(options?: any): RequestArgs;
};
/**
 * MoviesApi - functional programming interface
 * @export
 */
export declare const MoviesApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MoviesPost(options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>;
};
/**
 * MoviesApi - factory interface
 * @export
 */
export declare const MoviesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1MoviesPost(options?: any): AxiosPromise<void>;
};
/**
 * MoviesApi - object-oriented interface
 * @export
 * @class MoviesApi
 * @extends {BaseAPI}
 */
export declare class MoviesApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MoviesApi
     */
    apiV1MoviesPost(options?: any): AxiosPromise<void>;
}
/**
 * PartnersApi - axios parameter creator
 * @export
 */
export declare const PartnersApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/partners      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patner\"      }
     * @summary Get all partners.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/partners/1
     * @summary Delete patner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdDelete(partnerId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/patners/1
     * @summary Get partner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdGet(partnerId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/patners/1      {          firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update partner.
     * @param {string} partnerId
     * @param {UpdatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdPut(partnerId: string, body?: UpdatePartnerCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/partners      {          \"userName\": \"string\",          \"email\": \"string\",          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T18:04:18.025Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create partner.
     * @param {CreatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPost(body?: CreatePartnerCommand | undefined, options?: any): RequestArgs;
};
/**
 * PartnersApi - functional programming interface
 * @export
 */
export declare const PartnersApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/partners      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patner\"      }
     * @summary Get all partners.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<PartnersViewModel>;
    /**
     * Sample request:        DELETE /api/v1/partners/1
     * @summary Delete patner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdDelete(partnerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/patners/1
     * @summary Get partner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdGet(partnerId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<PartnerViewModel>;
    /**
     * Sample request:        PUT /api/v1/patners/1      {          firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update partner.
     * @param {string} partnerId
     * @param {UpdatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdPut(partnerId: string, body?: UpdatePartnerCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/partners      {          \"userName\": \"string\",          \"email\": \"string\",          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T18:04:18.025Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create partner.
     * @param {CreatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPost(body?: CreatePartnerCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * PartnersApi - factory interface
 * @export
 */
export declare const PartnersApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        GET /api/v1/partners      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patner\"      }
     * @summary Get all partners.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<PartnersViewModel>;
    /**
     * Sample request:        DELETE /api/v1/partners/1
     * @summary Delete patner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdDelete(partnerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/patners/1
     * @summary Get partner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdGet(partnerId: string, options?: any): AxiosPromise<PartnerViewModel>;
    /**
     * Sample request:        PUT /api/v1/patners/1      {          firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update partner.
     * @param {string} partnerId
     * @param {UpdatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPartnerIdPut(partnerId: string, body?: UpdatePartnerCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/partners      {          \"userName\": \"string\",          \"email\": \"string\",          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T18:04:18.025Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create partner.
     * @param {CreatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PartnersPost(body?: CreatePartnerCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * PartnersApi - object-oriented interface
 * @export
 * @class PartnersApi
 * @extends {BaseAPI}
 */
export declare class PartnersApi extends BaseAPI {
    /**
     * Sample request:        GET /api/v1/partners      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patner\"      }
     * @summary Get all partners.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PartnersApi
     */
    apiV1PartnersGet(id?: string, fullname?: string, email?: string, gender?: object, dateOfBirth?: Date, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<PartnersViewModel>;
    /**
     * Sample request:        DELETE /api/v1/partners/1
     * @summary Delete patner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PartnersApi
     */
    apiV1PartnersPartnerIdDelete(partnerId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/patners/1
     * @summary Get partner.
     * @param {string} partnerId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PartnersApi
     */
    apiV1PartnersPartnerIdGet(partnerId: string, options?: any): AxiosPromise<PartnerViewModel>;
    /**
     * Sample request:        PUT /api/v1/patners/1      {          firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update partner.
     * @param {string} partnerId
     * @param {UpdatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PartnersApi
     */
    apiV1PartnersPartnerIdPut(partnerId: string, body?: UpdatePartnerCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/partners      {          \"userName\": \"string\",          \"email\": \"string\",          \"firstName\": \"string\",          \"lastName\": \"string\",          \"photo\": \"string\",          \"photoThumbnail\": \"string\",          \"gender\": \"NotSpecified\",          \"dateOfBirth\": \"2020-02-22T18:04:18.025Z\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create partner.
     * @param {CreatePartnerCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PartnersApi
     */
    apiV1PartnersPost(body?: CreatePartnerCommand, options?: any): AxiosPromise<string>;
}
/**
 * PatientsApi - axios parameter creator
 * @export
 */
export declare const PatientsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/patients      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patient\"      }
     * @summary Get all patients.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/patients/1
     * @summary Delete patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdDelete(patientId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/patients/1
     * @summary Get patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdGet(patientId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/patients/1      {          \"referralCode\": \"string\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update patient.
     * @param {string} patientId
     * @param {UpdatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdPut(patientId: string, body?: UpdatePatientCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/patients      {          \"referralCode\": \"123456\",          \"email\": \"patient@icloudhospital.com\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create patient.
     * @param {CreatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPost(body?: CreatePatientCommand | undefined, options?: any): RequestArgs;
};
/**
 * PatientsApi - functional programming interface
 * @export
 */
export declare const PatientsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/patients      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patient\"      }
     * @summary Get all patients.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<PatientsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/patients/1
     * @summary Delete patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdDelete(patientId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/patients/1
     * @summary Get patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdGet(patientId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<PatientViewModel>;
    /**
     * Sample request:        PUT /api/v1/patients/1      {          \"referralCode\": \"string\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update patient.
     * @param {string} patientId
     * @param {UpdatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdPut(patientId: string, body?: UpdatePatientCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/patients      {          \"referralCode\": \"123456\",          \"email\": \"patient@icloudhospital.com\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create patient.
     * @param {CreatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPost(body?: CreatePatientCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
};
/**
 * PatientsApi - factory interface
 * @export
 */
export declare const PatientsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        GET /api/v1/patients      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patient\"      }
     * @summary Get all patients.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsGet(id?: string | undefined, fullname?: string | undefined, email?: string | undefined, gender?: object | undefined, dateOfBirth?: Date | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<PatientsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/patients/1
     * @summary Delete patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdDelete(patientId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/patients/1
     * @summary Get patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdGet(patientId: string, options?: any): AxiosPromise<PatientViewModel>;
    /**
     * Sample request:        PUT /api/v1/patients/1      {          \"referralCode\": \"string\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update patient.
     * @param {string} patientId
     * @param {UpdatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPatientIdPut(patientId: string, body?: UpdatePatientCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/patients      {          \"referralCode\": \"123456\",          \"email\": \"patient@icloudhospital.com\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create patient.
     * @param {CreatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1PatientsPost(body?: CreatePatientCommand | undefined, options?: any): AxiosPromise<string>;
};
/**
 * PatientsApi - object-oriented interface
 * @export
 * @class PatientsApi
 * @extends {BaseAPI}
 */
export declare class PatientsApi extends BaseAPI {
    /**
     * Sample request:        GET /api/v1/patients      {          \"pageQueryFilter\": {              \"page\": 1,              \"limit\": 20,              \"lastRetrived\": \"2020-02-05T08:40\"          },          \"searchString\": \"patient\"      }
     * @summary Get all patients.
     * @param {string} [id]
     * @param {string} [fullname]
     * @param {string} [email]
     * @param {object} [gender]
     * @param {Date} [dateOfBirth]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientsApi
     */
    apiV1PatientsGet(id?: string, fullname?: string, email?: string, gender?: object, dateOfBirth?: Date, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<PatientsViewModel>;
    /**
     * Sample request:        DELETE /api/v1/patients/1
     * @summary Delete patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientsApi
     */
    apiV1PatientsPatientIdDelete(patientId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/patients/1
     * @summary Get patient.
     * @param {string} patientId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientsApi
     */
    apiV1PatientsPatientIdGet(patientId: string, options?: any): AxiosPromise<PatientViewModel>;
    /**
     * Sample request:        PUT /api/v1/patients/1      {          \"referralCode\": \"string\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Update patient.
     * @param {string} patientId
     * @param {UpdatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientsApi
     */
    apiV1PatientsPatientIdPut(patientId: string, body?: UpdatePatientCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        POST /api/v1/patients      {          \"referralCode\": \"123456\",          \"email\": \"patient@icloudhospital.com\",          \"firstName\": \"patient\",          \"lastName\": \"cloud\",          \"photo\": \"string\",          \"locations\": [            {              \"locationType\": \"LivesIn\",              \"latitude\": 0,              \"longitude\": 0,              \"country\": \"string\",              \"state\": \"string\",              \"county\": \"string\",              \"city\": \"string\",              \"zipCode\": \"string\",              \"address\": \"string\"            }          ]      }
     * @summary Create patient.
     * @param {CreatePatientCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PatientsApi
     */
    apiV1PatientsPost(body?: CreatePatientCommand, options?: any): AxiosPromise<string>;
}
/**
 * ProfilesApi - axios parameter creator
 * @export
 */
export declare const ProfilesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        POST /api/v1/profiles/changeEmail      {          \"email\": \"user@example.com\"      }
     * @summary Change user\'s email on both Identity and Api.
     * @param {ChangeEmailCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ProfilesChangeemailPost(body?: ChangeEmailCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/profiles
     * @summary Get current user\'s profile.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ProfilesGet(options?: any): RequestArgs;
};
/**
 * ProfilesApi - functional programming interface
 * @export
 */
export declare const ProfilesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        POST /api/v1/profiles/changeEmail      {          \"email\": \"user@example.com\"      }
     * @summary Change user\'s email on both Identity and Api.
     * @param {ChangeEmailCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ProfilesChangeemailPost(body?: ChangeEmailCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/profiles
     * @summary Get current user\'s profile.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ProfilesGet(options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<UserViewModel>;
};
/**
 * ProfilesApi - factory interface
 * @export
 */
export declare const ProfilesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        POST /api/v1/profiles/changeEmail      {          \"email\": \"user@example.com\"      }
     * @summary Change user\'s email on both Identity and Api.
     * @param {ChangeEmailCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ProfilesChangeemailPost(body?: ChangeEmailCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/profiles
     * @summary Get current user\'s profile.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ProfilesGet(options?: any): AxiosPromise<UserViewModel>;
};
/**
 * ProfilesApi - object-oriented interface
 * @export
 * @class ProfilesApi
 * @extends {BaseAPI}
 */
export declare class ProfilesApi extends BaseAPI {
    /**
     * Sample request:        POST /api/v1/profiles/changeEmail      {          \"email\": \"user@example.com\"      }
     * @summary Change user\'s email on both Identity and Api.
     * @param {ChangeEmailCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    apiV1ProfilesChangeemailPost(body?: ChangeEmailCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/profiles
     * @summary Get current user\'s profile.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProfilesApi
     */
    apiV1ProfilesGet(options?: any): AxiosPromise<UserViewModel>;
}
/**
 * ServicesApi - axios parameter creator
 * @export
 */
export declare const ServicesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1/services      {          \"name\": \"Heart check up\",          \"description\": \"Asan Hospital (Asan Medical Center) is the largest multidisciplinary medical center in South Korea, which can serve 2,700 patients at once.The key specialties in the hospital are organ transplant, oncology, cardiology, and cardiac surgery.Almost half of all heart transplants in South Korea are carried out (45%) at Asan.The success of organ transplants ranges from 90%. Every day, 11,800 outpatients and 2,550 inpatients are treated in Asan Hospital. Medical tourists from the USA, China, the UAE, Russia, Kazakhstan, and Mongolia choose Asan Hospital.\",          \"minPrice\": 2235,          \"maxPrice\": 2566,          \"priceReuqest\": false,          \"procedure\": \"Treatment\"      }
     * @summary Create service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {CreateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesPost(hospitalId: string, specialtyId: string, body?: CreateServiceCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1/services/1
     * @summary Delete service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdDelete(hospitalId: string, specialtyId: string, serviceId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/hospitals/1/specialties/1/services/1
     * @summary Get service.
     * @param {number} hospitalId
     * @param {number} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdGet(hospitalId: number, specialtyId: number, serviceId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialties/1/services/1      {          \"name\": \"Extended analysis of blood\",          \"description\": \"Extended analysis of blood description.\",          \"minPrice\": 1000,          \"maxPrice\": 2600,          \"priceReuqest\": false      }
     * @summary Update service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {UpdateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdPut(hospitalId: string, specialtyId: string, serviceId: string, body?: UpdateServiceCommand | undefined, options?: any): RequestArgs;
    /**
     * Smaple request:        PUT /api/v1/hospitals/1/specialties/1/servicesquence      {          \"serviceSequence\": [1, 3, 5]      }
     * @summary Update service sequence.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {UpdateServiceSequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesquencePut(hospitalId: string, specialtyId: string, body?: UpdateServiceSequenceCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/hospitals/services
     * @summary Get all services.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [specialtyId]
     * @param {string} [specialtyTypeId]
     * @param {object} [procedure]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsServicesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, hospitalId?: string | undefined, specialtyId?: string | undefined, specialtyTypeId?: string | undefined, procedure?: object | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
};
/**
 * ServicesApi - functional programming interface
 * @export
 */
export declare const ServicesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1/services      {          \"name\": \"Heart check up\",          \"description\": \"Asan Hospital (Asan Medical Center) is the largest multidisciplinary medical center in South Korea, which can serve 2,700 patients at once.The key specialties in the hospital are organ transplant, oncology, cardiology, and cardiac surgery.Almost half of all heart transplants in South Korea are carried out (45%) at Asan.The success of organ transplants ranges from 90%. Every day, 11,800 outpatients and 2,550 inpatients are treated in Asan Hospital. Medical tourists from the USA, China, the UAE, Russia, Kazakhstan, and Mongolia choose Asan Hospital.\",          \"minPrice\": 2235,          \"maxPrice\": 2566,          \"priceReuqest\": false,          \"procedure\": \"Treatment\"      }
     * @summary Create service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {CreateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesPost(hospitalId: string, specialtyId: string, body?: CreateServiceCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1/services/1
     * @summary Delete service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdDelete(hospitalId: string, specialtyId: string, serviceId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/specialties/1/services/1
     * @summary Get service.
     * @param {number} hospitalId
     * @param {number} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdGet(hospitalId: number, specialtyId: number, serviceId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ServiceViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialties/1/services/1      {          \"name\": \"Extended analysis of blood\",          \"description\": \"Extended analysis of blood description.\",          \"minPrice\": 1000,          \"maxPrice\": 2600,          \"priceReuqest\": false      }
     * @summary Update service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {UpdateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdPut(hospitalId: string, specialtyId: string, serviceId: string, body?: UpdateServiceCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Smaple request:        PUT /api/v1/hospitals/1/specialties/1/servicesquence      {          \"serviceSequence\": [1, 3, 5]      }
     * @summary Update service sequence.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {UpdateServiceSequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesquencePut(hospitalId: string, specialtyId: string, body?: UpdateServiceSequenceCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/services
     * @summary Get all services.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [specialtyId]
     * @param {string} [specialtyTypeId]
     * @param {object} [procedure]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsServicesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, hospitalId?: string | undefined, specialtyId?: string | undefined, specialtyTypeId?: string | undefined, procedure?: object | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ServicesViewModel>;
};
/**
 * ServicesApi - factory interface
 * @export
 */
export declare const ServicesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1/services      {          \"name\": \"Heart check up\",          \"description\": \"Asan Hospital (Asan Medical Center) is the largest multidisciplinary medical center in South Korea, which can serve 2,700 patients at once.The key specialties in the hospital are organ transplant, oncology, cardiology, and cardiac surgery.Almost half of all heart transplants in South Korea are carried out (45%) at Asan.The success of organ transplants ranges from 90%. Every day, 11,800 outpatients and 2,550 inpatients are treated in Asan Hospital. Medical tourists from the USA, China, the UAE, Russia, Kazakhstan, and Mongolia choose Asan Hospital.\",          \"minPrice\": 2235,          \"maxPrice\": 2566,          \"priceReuqest\": false,          \"procedure\": \"Treatment\"      }
     * @summary Create service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {CreateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesPost(hospitalId: string, specialtyId: string, body?: CreateServiceCommand | undefined, options?: any): AxiosPromise<string>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1/services/1
     * @summary Delete service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdDelete(hospitalId: string, specialtyId: string, serviceId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/specialties/1/services/1
     * @summary Get service.
     * @param {number} hospitalId
     * @param {number} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdGet(hospitalId: number, specialtyId: number, serviceId: string, options?: any): AxiosPromise<ServiceViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialties/1/services/1      {          \"name\": \"Extended analysis of blood\",          \"description\": \"Extended analysis of blood description.\",          \"minPrice\": 1000,          \"maxPrice\": 2600,          \"priceReuqest\": false      }
     * @summary Update service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {UpdateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdPut(hospitalId: string, specialtyId: string, serviceId: string, body?: UpdateServiceCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Smaple request:        PUT /api/v1/hospitals/1/specialties/1/servicesquence      {          \"serviceSequence\": [1, 3, 5]      }
     * @summary Update service sequence.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {UpdateServiceSequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesquencePut(hospitalId: string, specialtyId: string, body?: UpdateServiceSequenceCommand | undefined, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/services
     * @summary Get all services.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [specialtyId]
     * @param {string} [specialtyTypeId]
     * @param {object} [procedure]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1HospitalsServicesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, hospitalId?: string | undefined, specialtyId?: string | undefined, specialtyTypeId?: string | undefined, procedure?: object | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<ServicesViewModel>;
};
/**
 * ServicesApi - object-oriented interface
 * @export
 * @class ServicesApi
 * @extends {BaseAPI}
 */
export declare class ServicesApi extends BaseAPI {
    /**
     * Sample request:        POST /api/v1/hospitals/1/specialties/1/services      {          \"name\": \"Heart check up\",          \"description\": \"Asan Hospital (Asan Medical Center) is the largest multidisciplinary medical center in South Korea, which can serve 2,700 patients at once.The key specialties in the hospital are organ transplant, oncology, cardiology, and cardiac surgery.Almost half of all heart transplants in South Korea are carried out (45%) at Asan.The success of organ transplants ranges from 90%. Every day, 11,800 outpatients and 2,550 inpatients are treated in Asan Hospital. Medical tourists from the USA, China, the UAE, Russia, Kazakhstan, and Mongolia choose Asan Hospital.\",          \"minPrice\": 2235,          \"maxPrice\": 2566,          \"priceReuqest\": false,          \"procedure\": \"Treatment\"      }
     * @summary Create service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {CreateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApi
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesPost(hospitalId: string, specialtyId: string, body?: CreateServiceCommand, options?: any): AxiosPromise<string>;
    /**
     * Sample request:        DELETE /api/v1/hospitals/1/specialties/1/services/1
     * @summary Delete service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApi
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdDelete(hospitalId: string, specialtyId: string, serviceId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/1/specialties/1/services/1
     * @summary Get service.
     * @param {number} hospitalId
     * @param {number} specialtyId
     * @param {string} serviceId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApi
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdGet(hospitalId: number, specialtyId: number, serviceId: string, options?: any): AxiosPromise<ServiceViewModel>;
    /**
     * Sample request:        PUT /api/v1/hospitals/1/specialties/1/services/1      {          \"name\": \"Extended analysis of blood\",          \"description\": \"Extended analysis of blood description.\",          \"minPrice\": 1000,          \"maxPrice\": 2600,          \"priceReuqest\": false      }
     * @summary Update service.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {string} serviceId
     * @param {UpdateServiceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApi
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesServiceIdPut(hospitalId: string, specialtyId: string, serviceId: string, body?: UpdateServiceCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Smaple request:        PUT /api/v1/hospitals/1/specialties/1/servicesquence      {          \"serviceSequence\": [1, 3, 5]      }
     * @summary Update service sequence.
     * @param {string} hospitalId
     * @param {string} specialtyId
     * @param {UpdateServiceSequenceCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApi
     */
    apiV1HospitalsHospitalIdSpecialtiesSpecialtyIdServicesquencePut(hospitalId: string, specialtyId: string, body?: UpdateServiceSequenceCommand, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/hospitals/services
     * @summary Get all services.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [hospitalId]
     * @param {string} [specialtyId]
     * @param {string} [specialtyTypeId]
     * @param {object} [procedure]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ServicesApi
     */
    apiV1HospitalsServicesGet(id?: string, name?: string, description?: string, hospitalId?: string, specialtyId?: string, specialtyTypeId?: string, procedure?: object, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<ServicesViewModel>;
}
/**
 * SpecialtiesApi - axios parameter creator
 * @export
 */
export declare const SpecialtiesApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/specialties
     * @summary Get all specialties.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, specialtyTypeId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        POST /api/v1/specialties      {          \"name\": \"Coronary artery disease\",          \"description\": \"Coronary artery disease\",          \"specialtyType\": \"Cardiology\"      }
     * @summary Create specialty.
     * @param {string} [specialtyTypeId]
     * @param {CreateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesPost(specialtyTypeId?: string | undefined, body?: CreateSpecialtyCommand | undefined, options?: any): RequestArgs;
    /**
     * Sample request:        DELETE /api/v1/specialties/1
     * @summary Delete specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdDelete(specialtyId: string, options?: any): RequestArgs;
    /**
     * Sample request:        GET /api/v1/specialties/1
     * @summary Get specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdGet(specialtyId: string, options?: any): RequestArgs;
    /**
     * Sample request:        PUT /api/v1/specialties/1      {          \"name\": \"Dilated cardiomyopathy\",          \"description\": \"Dilated cardiomyopathy\"      }
     * @summary Update specialty
     * @param {string} specialtyId
     * @param {UpdateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdPut(specialtyId: string, body?: UpdateSpecialtyCommand | undefined, options?: any): RequestArgs;
};
/**
 * SpecialtiesApi - functional programming interface
 * @export
 */
export declare const SpecialtiesApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Sample request:        GET /api/v1/specialties
     * @summary Get all specialties.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, specialtyTypeId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SpecialtiesViewModel>;
    /**
     * Sample request:        POST /api/v1/specialties      {          \"name\": \"Coronary artery disease\",          \"description\": \"Coronary artery disease\",          \"specialtyType\": \"Cardiology\"      }
     * @summary Create specialty.
     * @param {string} [specialtyTypeId]
     * @param {CreateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesPost(specialtyTypeId?: string | undefined, body?: CreateSpecialtyCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>;
    /**
     * Sample request:        DELETE /api/v1/specialties/1
     * @summary Delete specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdDelete(specialtyId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/specialties/1
     * @summary Get specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdGet(specialtyId: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SpecialtyViewModel>;
    /**
     * Sample request:        PUT /api/v1/specialties/1      {          \"name\": \"Dilated cardiomyopathy\",          \"description\": \"Dilated cardiomyopathy\"      }
     * @summary Update specialty
     * @param {string} specialtyId
     * @param {UpdateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdPut(specialtyId: string, body?: UpdateSpecialtyCommand | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<boolean>;
};
/**
 * SpecialtiesApi - factory interface
 * @export
 */
export declare const SpecialtiesApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Sample request:        GET /api/v1/specialties
     * @summary Get all specialties.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesGet(id?: string | undefined, name?: string | undefined, description?: string | undefined, specialtyTypeId?: string | undefined, created?: Date | undefined, page?: number | undefined, limit?: number | undefined, lastRetrieved?: Date | undefined, current?: boolean | undefined, options?: any): AxiosPromise<SpecialtiesViewModel>;
    /**
     * Sample request:        POST /api/v1/specialties      {          \"name\": \"Coronary artery disease\",          \"description\": \"Coronary artery disease\",          \"specialtyType\": \"Cardiology\"      }
     * @summary Create specialty.
     * @param {string} [specialtyTypeId]
     * @param {CreateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesPost(specialtyTypeId?: string | undefined, body?: CreateSpecialtyCommand | undefined, options?: any): AxiosPromise<string>;
    /**
     * Sample request:        DELETE /api/v1/specialties/1
     * @summary Delete specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdDelete(specialtyId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/specialties/1
     * @summary Get specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdGet(specialtyId: string, options?: any): AxiosPromise<SpecialtyViewModel>;
    /**
     * Sample request:        PUT /api/v1/specialties/1      {          \"name\": \"Dilated cardiomyopathy\",          \"description\": \"Dilated cardiomyopathy\"      }
     * @summary Update specialty
     * @param {string} specialtyId
     * @param {UpdateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1SpecialtiesSpecialtyIdPut(specialtyId: string, body?: UpdateSpecialtyCommand | undefined, options?: any): AxiosPromise<boolean>;
};
/**
 * SpecialtiesApi - object-oriented interface
 * @export
 * @class SpecialtiesApi
 * @extends {BaseAPI}
 */
export declare class SpecialtiesApi extends BaseAPI {
    /**
     * Sample request:        GET /api/v1/specialties
     * @summary Get all specialties.
     * @param {string} [id]
     * @param {string} [name]
     * @param {string} [description]
     * @param {string} [specialtyTypeId]
     * @param {Date} [created]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {Date} [lastRetrieved]
     * @param {boolean} [current]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpecialtiesApi
     */
    apiV1SpecialtiesGet(id?: string, name?: string, description?: string, specialtyTypeId?: string, created?: Date, page?: number, limit?: number, lastRetrieved?: Date, current?: boolean, options?: any): AxiosPromise<SpecialtiesViewModel>;
    /**
     * Sample request:        POST /api/v1/specialties      {          \"name\": \"Coronary artery disease\",          \"description\": \"Coronary artery disease\",          \"specialtyType\": \"Cardiology\"      }
     * @summary Create specialty.
     * @param {string} [specialtyTypeId]
     * @param {CreateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpecialtiesApi
     */
    apiV1SpecialtiesPost(specialtyTypeId?: string, body?: CreateSpecialtyCommand, options?: any): AxiosPromise<string>;
    /**
     * Sample request:        DELETE /api/v1/specialties/1
     * @summary Delete specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpecialtiesApi
     */
    apiV1SpecialtiesSpecialtyIdDelete(specialtyId: string, options?: any): AxiosPromise<boolean>;
    /**
     * Sample request:        GET /api/v1/specialties/1
     * @summary Get specialty.
     * @param {string} specialtyId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpecialtiesApi
     */
    apiV1SpecialtiesSpecialtyIdGet(specialtyId: string, options?: any): AxiosPromise<SpecialtyViewModel>;
    /**
     * Sample request:        PUT /api/v1/specialties/1      {          \"name\": \"Dilated cardiomyopathy\",          \"description\": \"Dilated cardiomyopathy\"      }
     * @summary Update specialty
     * @param {string} specialtyId
     * @param {UpdateSpecialtyCommand} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpecialtiesApi
     */
    apiV1SpecialtiesSpecialtyIdPut(specialtyId: string, body?: UpdateSpecialtyCommand, options?: any): AxiosPromise<boolean>;
}
